"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[3735],{"./app/components/app-components/tcpr-common/advanced-time-entries/advanced-time-entries.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"app-components/tcpr-common/advanced-time-entries",component:"AppComponentsTcprCommonAdvancedTimeEntries",parameters:{docs:{description:{component:"The Advanced Time Entries component is designed to manage and display time entries within a specified module. It integrates with React components to render time entry widgets and provides functionality to handle permissions and loading states."}}}},mockMspTimeEntries=()=>Ember.on("init",(async function(){const mspTimeEntries=Ember.getOwner(this).lookup("service:msp.time-entries");Ember.setProperties(mspTimeEntries,{getTimeEntryPermissions:()=>({show:!0,edit:!0,disableActions:!1})})})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"MBdN4g5v",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,null,null],[1,"\\n          "],[8,[39,2],null,[["@permissions","@model","@module"],[[30,0,["permissions"]],[30,0,["model"]],[30,0,["module"]]]],null],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/app-toaster","app-components/tcpr-common/advanced-time-entries"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),mockMspTimeEntries:mockMspTimeEntries()}}),name:"Default",argTypes:{permissions:{type:"object",description:"Permissions object to control the visibility and editability of time entries."},model:{type:"object",description:"The model object containing data related to the time entries."},module:{type:"string",description:"The module name for which the time entries are being managed."}},args:{permissions:{show:!0,edit:!0,disableActions:!1},model:Ember.Object.create({displayId:123}),module:"ticket"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <UiComponents::AppToaster/>\n          <AppComponents::TcprCommon::AdvancedTimeEntries\n            @permissions={{this.permissions}}\n            @model={{this.model}}\n            @module={{this.module}}\n          />\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        mockMspTimeEntries: mockMspTimeEntries()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    permissions: {\n      type: 'object',\n      description: 'Permissions object to control the visibility and editability of time entries.'\n    },\n    model: {\n      type: 'object',\n      description: 'The model object containing data related to the time entries.'\n    },\n    module: {\n      type: 'string',\n      description: 'The module name for which the time entries are being managed.'\n    }\n  },\n  args: {\n    permissions: {\n      show: true,\n      edit: true,\n      disableActions: false\n    },\n    model: EmberObject.create({\n      displayId: 123\n      // Add other necessary attributes and methods used in the component\n    }),\n    module: 'ticket'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);