"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[957],{"./app/components/app-components/users-groups-select/users-groups-select.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={component:"AppComponentsUsersGroupsSelect",parameters:{docs:{description:{component:"This component will take modules array as parameters and render a multi select dropdown with the tabs and corresponding options.\n                                All initial data fetching and searching functionalities are handled in the component.\n                                Possible module parameters are => 'agents', 'requesters', 'agentGroups', 'users'.\n                                If 'users' is passed, then user tab will contain both agents and requesters options.\n                                Additional data filtering can also be done in the parent method as per requirement.\n                                This component can be used both with form-serve and as a standalone component."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"MP+ZlnJf",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"\\t\\t\\t\\t\\t\\t\\t\\t"],[8,[39,1],null,[["@object","@propertyName","@formScope","@modules","@onOptionChange","@filterOptions","@disabled","@placeholder","@label","@required"],[[99,2,["@object"]],[99,3,["@propertyName"]],[99,4,["@formScope"]],[99,5,["@modules"]],[99,6,["@onOptionChange"]],[99,7,["@filterOptions"]],[99,8,["@disabled"]],[28,[37,9],["fs.tickets.oncall_details.add_responders_placeholder"],null],[99,10,["@label"]],[99,11,["@required"]]]],null],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","app-components/users-groups-select","object","propertyName","formScope","modules","onUpdateValue","filterOptions","disabled","t","label","required"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{object:{type:{name:"object",required:!0},description:"Object in which the values will be stored"},propertyName:{description:"Property of the object in which the list of values will be stored",type:{name:"string"}},formScope:{description:"Formscope of the multi select",control:{disable:!0},type:{name:"object"}},modules:{description:"It takes an array of modules which will appear as tabs. Accepted values are agents, agentGroups, requesters, users. If users is passed, make sure agents and requesters are not passed also.",type:{name:"array",required:!0}},onOptionChange:{description:"Action which will be triggered when a value is selected from the dropdown",control:{disable:!0},type:{name:"method"}},filterOptions:{description:"If any additional filtering of data is required for the options, this action can be defined",control:{disable:!0},type:{name:"method"}},disabled:{description:"Indicates whether the multi select is disabled or not",type:{name:"boolean"}},placeholder:{description:"Placeholder text for the input box",type:{name:"string"}},label:{description:"Label for the multi select",type:{name:"string"}},required:{description:"Indicates whether the multi select value is required or not",type:{name:"boolean"}}},args:{object:{responders:[]},formScope:{showErrorMessage:!0},modules:["agentGroups","agents"],disabled:!1,required:!0,label:"Label",propertyName:"responders"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                            {{#if this.translationsLoaded}}\n                                <AppComponents::UsersGroupsSelect\n                                    @object = {{object}}\n                                    @propertyName = {{propertyName}}\n                                    @formScope = {{formScope}}\n                                    @modules = {{modules}}\n                                    @onOptionChange = {{onUpdateValue}}\n                                    @filterOptions = {{filterOptions}}\n                                    @disabled = {{disabled}}\n                                    @placeholder = {{t \"fs.tickets.oncall_details.add_responders_placeholder\" }}\n                                    @label = {{label}}\n                                    @required = {{required}}\n                                />\n                            {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    object: {\n      type: {\n        name: 'object',\n        required: true\n      },\n      description: 'Object in which the values will be stored'\n    },\n    propertyName: {\n      description: 'Property of the object in which the list of values will be stored',\n      type: {\n        name: 'string'\n      }\n    },\n    formScope: {\n      description: 'Formscope of the multi select',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'object'\n      }\n    },\n    modules: {\n      description: 'It takes an array of modules which will appear as tabs. Accepted values are agents, agentGroups, requesters, users. If users is passed, make sure agents and requesters are not passed also.',\n      type: {\n        name: 'array',\n        required: true\n      }\n    },\n    onOptionChange: {\n      description: 'Action which will be triggered when a value is selected from the dropdown',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'method'\n      }\n    },\n    filterOptions: {\n      description: 'If any additional filtering of data is required for the options, this action can be defined',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'method'\n      }\n    },\n    disabled: {\n      description: 'Indicates whether the multi select is disabled or not',\n      type: {\n        name: 'boolean'\n      }\n    },\n    placeholder: {\n      description: 'Placeholder text for the input box',\n      type: {\n        name: 'string'\n      }\n    },\n    label: {\n      description: 'Label for the multi select',\n      type: {\n        name: 'string'\n      }\n    },\n    required: {\n      description: 'Indicates whether the multi select value is required or not',\n      type: {\n        name: 'boolean'\n      }\n    }\n  },\n  args: {\n    object: {\n      responders: []\n    },\n    formScope: {\n      showErrorMessage: true\n    },\n    modules: ['agentGroups', 'agents'],\n    disabled: false,\n    required: true,\n    label: 'Label',\n    propertyName: 'responders'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);