"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4874],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/multi-column-list/mutli-column-list.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{CustomRowForBothColumns:()=>CustomRowForBothColumns,CustomRowForTeamsColumn:()=>CustomRowForTeamsColumn,Default:()=>Default,ErrorAndEmptyMessage:()=>ErrorAndEmptyMessage,LoadingMessageAndCustomFooter:()=>LoadingMessageAndCustomFooter,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/mutli-column-list",component:"UiComponentsMutliColumnList"},Default={render:args=>({template:Ember.HTMLBars.template({id:"wcQx655w",block:'[[[1,"\\n                "],[8,[39,0],null,[["@title","@columnsList","@onRowSelect"],[[30,0,["title"]],[30,0,["columnsList"]],[30,0,["onRowSelect"]]]],null],[1,"\\n            "]],[],false,["ui-components/multi-column-list"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,onRowSelect:(column,row,event)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Row selected")(column,row,event)}}),name:"Default",argTypes:{title:{description:"Title for the component",type:"string"},columnsList:{description:"Array of Column objects",type:"object"},onRowSelect:{description:"Row select callback",type:"function"}},args:{title:"Select Channels to add",columnsList:[{name:"teams",title:"Teams",icon:"people-team",isMultiSelect:!1,rowIdProperty:"id",rowTitleProperty:"title",errorMessage:"",emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Team 1"},{id:2,title:"Team 2"}]},{name:"channels",title:"Channels",icon:"chat-outline",isMultiSelect:!0,rowIdProperty:"id",rowTitleProperty:"title",rowCheckedProperty:"isChecked",errorMessage:"",emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Channel 1",isChecked:!1},{id:2,title:"Channel 2",isChecked:!0}]}]}},ErrorAndEmptyMessage={render:args=>({template:Ember.HTMLBars.template({id:"wcQx655w",block:'[[[1,"\\n                "],[8,[39,0],null,[["@title","@columnsList","@onRowSelect"],[[30,0,["title"]],[30,0,["columnsList"]],[30,0,["onRowSelect"]]]],null],[1,"\\n            "]],[],false,["ui-components/multi-column-list"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,onRowSelect:(column,row,event)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Row selected")(column,row,event)}}),name:"Error and Empty Message",args:{title:"Select Channels to add",columnsList:[{name:"teams",title:"Teams",icon:"people-team",isMultiSelect:!1,rowIdProperty:"id",rowTitleProperty:"title",errorMessage:"Unable to fetch Teams",showError:!0,emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Team 1"},{id:2,title:"Team 2"}]},{name:"channels",title:"Channels",icon:"chat-outline",isMultiSelect:!0,rowIdProperty:"id",rowTitleProperty:"title",rowCheckedProperty:"isChecked",errorMessage:"",emptyMessage:"Select Teams to get Channels",loadingMessage:"",rows:[]}]}},LoadingMessageAndCustomFooter={render:args=>({template:Ember.HTMLBars.template({id:"0CAsGb2b",block:'[[[1,"\\n                "],[8,[39,0],null,[["@title","@columnsList","@onRowSelect"],[[30,0,["title"]],[30,0,["columnsList"]],[30,0,["onRowSelect"]]]],[["default"],[[[[1,"\\n                  "],[8,[30,1,["footer"]],null,null,[["default"],[[[[1,"\\n                    "],[10,1],[12],[1,"Custom Footer"],[13],[1,"\\n                  "]],[]]]]],[1,"\\n                "]],[1]]]]],[1,"\\n            "]],["column"],false,["ui-components/multi-column-list"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,onRowSelect:(column,row,event)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Row selected")(column,row,event)}}),name:"Loading message and custom footer",args:{title:"Select Channels to add",columnsList:[{name:"teams",title:"Teams",icon:"people-team",isMultiSelect:!1,rowIdProperty:"id",rowTitleProperty:"title",errorMessage:"",emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Team 1"},{id:2,title:"Team 2"}]},{name:"channels",title:"Channels",icon:"chat-outline",isMultiSelect:!0,rowIdProperty:"id",rowTitleProperty:"title",rowCheckedProperty:"isChecked",errorMessage:"",emptyMessage:"",loadingMessage:"Fetching Channels",isLoading:!0,rows:[]}]}},CustomRowForTeamsColumn={render:args=>({template:Ember.HTMLBars.template({id:"pKYsPWeo",block:'[[[1,"\\n                "],[8,[39,0],null,[["@title","@columnsList","@onRowSelect"],[[30,0,["title"]],[30,0,["columnsList"]],[30,0,["onRowSelect"]]]],[["default"],[[[[1,"\\n                  "],[8,[30,1,["row"]],null,null,[["default"],[[[[1,"\\n                    "],[10,0],[12],[1,[30,2,["row","title"]]],[13],[1,"\\n                  "]],[2]]]]],[1,"\\n                "]],[1]]]]],[1,"\\n            "]],["column","args"],false,["ui-components/multi-column-list"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,onRowSelect:(column,row,event)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Row selected")(column,row,event)}}),name:"Custom row for teams column",args:{title:"Select Channels to add",columnsList:[{name:"teams",title:"Teams",icon:"people-team",isMultiSelect:!1,rowIdProperty:"id",rowTitleProperty:"title",errorMessage:"",emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Team 1"},{id:2,title:"Team 2"}],isCustomRow:!0},{name:"channels",title:"Channels",icon:"chat-outline",isMultiSelect:!0,rowIdProperty:"id",rowTitleProperty:"title",rowCheckedProperty:"isChecked",errorMessage:"",emptyMessage:"",loadingMessage:"",isLoading:!1,rows:[{id:1,title:"Channel 1",isChecked:!1},{id:2,title:"Channel 2",isChecked:!0}]}]}},CustomRowForBothColumns={render:args=>({template:Ember.HTMLBars.template({id:"3TBf365o",block:'[[[1,"\\n                "],[8,[39,0],null,[["@title","@columnsList","@onRowSelect"],[[30,0,["title"]],[30,0,["columnsList"]],[30,0,["onRowSelect"]]]],[["default"],[[[[1,"\\n                  "],[8,[30,1,["row"]],null,null,[["default"],[[[[1,"\\n"],[41,[28,[37,2],[[30,2,["column","name"]],"teams"],null],[[[1,"                    "],[10,0],[12],[1,[30,2,["row","title"]]],[13],[1,"\\n"]],[]],[[[1,"                    "],[10,1],[12],[1,[30,2,["row","title"]]],[13],[1,"\\n"]],[]]],[1,"                  "]],[2]]]]],[1,"\\n                "]],[1]]]]],[1,"\\n            "]],["column","args"],false,["ui-components/multi-column-list","if","eq"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,onRowSelect:(column,row,event)=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Row selected")(column,row,event)}}),name:"Custom row for both columns",args:{title:"Select Channels to add",columnsList:[{name:"teams",title:"Teams",icon:"people-team",isMultiSelect:!1,rowIdProperty:"id",rowTitleProperty:"title",errorMessage:"",emptyMessage:"",loadingMessage:"",rows:[{id:1,title:"Team 1"},{id:2,title:"Team 2"}],isCustomRow:!0},{name:"channels",title:"Channels",icon:"chat-outline",isMultiSelect:!0,rowIdProperty:"id",rowTitleProperty:"title",rowCheckedProperty:"isChecked",errorMessage:"",emptyMessage:"",loadingMessage:"",isLoading:!1,rows:[{id:1,title:"Channel 1",isChecked:!1},{id:2,title:"Channel 2",isChecked:!0}],isCustomRow:!0}]}},__namedExportsOrder=["Default","ErrorAndEmptyMessage","LoadingMessageAndCustomFooter","CustomRowForTeamsColumn","CustomRowForBothColumns"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::MultiColumnList\n                    @title={{this.title}}\n                    @columnsList = {{this.columnsList}}\n                    @onRowSelect={{this.onRowSelect}}\n                />\n            `,\n      context: {\n        ...args,\n        onRowSelect: (column, row, event) => action('Row selected')(column, row, event)\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    title: {\n      description: 'Title for the component',\n      type: 'string'\n    },\n    columnsList: {\n      description: 'Array of Column objects',\n      type: 'object'\n    },\n    onRowSelect: {\n      description: 'Row select callback',\n      type: 'function'\n    }\n  },\n  args: {\n    title: 'Select Channels to add',\n    columnsList: [{\n      name: 'teams',\n      title: 'Teams',\n      icon: 'people-team',\n      isMultiSelect: false,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Team 1'\n      }, {\n        id: 2,\n        title: 'Team 2'\n      }]\n    }, {\n      name: 'channels',\n      title: 'Channels',\n      icon: 'chat-outline',\n      isMultiSelect: true,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      rowCheckedProperty: 'isChecked',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Channel 1',\n        isChecked: false\n      }, {\n        id: 2,\n        title: 'Channel 2',\n        isChecked: true\n      }]\n    }]\n  }\n}",...Default.parameters?.docs?.source}}},ErrorAndEmptyMessage.parameters={...ErrorAndEmptyMessage.parameters,docs:{...ErrorAndEmptyMessage.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::MultiColumnList\n                  @title={{this.title}}\n                  @columnsList = {{this.columnsList}}\n                  @onRowSelect={{this.onRowSelect}}\n                />\n            `,\n      context: {\n        ...args,\n        onRowSelect: (column, row, event) => action('Row selected')(column, row, event)\n      }\n    };\n  },\n  name: 'Error and Empty Message',\n  args: {\n    title: 'Select Channels to add',\n    columnsList: [{\n      name: 'teams',\n      title: 'Teams',\n      icon: 'people-team',\n      isMultiSelect: false,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      errorMessage: 'Unable to fetch Teams',\n      showError: true,\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Team 1'\n      }, {\n        id: 2,\n        title: 'Team 2'\n      }]\n    }, {\n      name: 'channels',\n      title: 'Channels',\n      icon: 'chat-outline',\n      isMultiSelect: true,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      rowCheckedProperty: 'isChecked',\n      errorMessage: '',\n      emptyMessage: 'Select Teams to get Channels',\n      loadingMessage: '',\n      rows: []\n    }]\n  }\n}",...ErrorAndEmptyMessage.parameters?.docs?.source}}},LoadingMessageAndCustomFooter.parameters={...LoadingMessageAndCustomFooter.parameters,docs:{...LoadingMessageAndCustomFooter.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::MultiColumnList\n                  @title={{this.title}}\n                  @columnsList = {{this.columnsList}}\n                  @onRowSelect={{this.onRowSelect}}\n                as |column|>\n                  <column.footer>\n                    <span>Custom Footer</span>\n                  </column.footer>\n                </UiComponents::MultiColumnList>\n            `,\n      context: {\n        ...args,\n        onRowSelect: (column, row, event) => action('Row selected')(column, row, event)\n      }\n    };\n  },\n  name: 'Loading message and custom footer',\n  args: {\n    title: 'Select Channels to add',\n    columnsList: [{\n      name: 'teams',\n      title: 'Teams',\n      icon: 'people-team',\n      isMultiSelect: false,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Team 1'\n      }, {\n        id: 2,\n        title: 'Team 2'\n      }]\n    }, {\n      name: 'channels',\n      title: 'Channels',\n      icon: 'chat-outline',\n      isMultiSelect: true,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      rowCheckedProperty: 'isChecked',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: 'Fetching Channels',\n      isLoading: true,\n      rows: []\n    }]\n  }\n}",...LoadingMessageAndCustomFooter.parameters?.docs?.source}}},CustomRowForTeamsColumn.parameters={...CustomRowForTeamsColumn.parameters,docs:{...CustomRowForTeamsColumn.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::MultiColumnList\n                  @title={{this.title}}\n                  @columnsList = {{this.columnsList}}\n                  @onRowSelect={{this.onRowSelect}}\n                as |column|>\n                  <column.row as |args|>\n                    <div>{{args.row.title}}</div>\n                  </column.row>\n                </UiComponents::MultiColumnList>\n            `,\n      context: {\n        ...args,\n        onRowSelect: (column, row, event) => action('Row selected')(column, row, event)\n      }\n    };\n  },\n  name: 'Custom row for teams column',\n  args: {\n    title: 'Select Channels to add',\n    columnsList: [{\n      name: 'teams',\n      title: 'Teams',\n      icon: 'people-team',\n      isMultiSelect: false,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Team 1'\n      }, {\n        id: 2,\n        title: 'Team 2'\n      }],\n      isCustomRow: true\n    }, {\n      name: 'channels',\n      title: 'Channels',\n      icon: 'chat-outline',\n      isMultiSelect: true,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      rowCheckedProperty: 'isChecked',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      isLoading: false,\n      rows: [{\n        id: 1,\n        title: 'Channel 1',\n        isChecked: false\n      }, {\n        id: 2,\n        title: 'Channel 2',\n        isChecked: true\n      }]\n    }]\n  }\n}",...CustomRowForTeamsColumn.parameters?.docs?.source}}},CustomRowForBothColumns.parameters={...CustomRowForBothColumns.parameters,docs:{...CustomRowForBothColumns.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::MultiColumnList\n                  @title={{this.title}}\n                  @columnsList = {{this.columnsList}}\n                  @onRowSelect={{this.onRowSelect}}\n                as |column|>\n                  <column.row as |args|>\n                  {{#if (eq args.column.name 'teams')}}\n                    <div>{{args.row.title}}</div>\n                  {{else}}\n                    <span>{{args.row.title}}</span>\n                  {{/if}}\n                  </column.row>\n                </UiComponents::MultiColumnList>\n            `,\n      context: {\n        ...args,\n        onRowSelect: (column, row, event) => action('Row selected')(column, row, event)\n      }\n    };\n  },\n  name: 'Custom row for both columns',\n  args: {\n    title: 'Select Channels to add',\n    columnsList: [{\n      name: 'teams',\n      title: 'Teams',\n      icon: 'people-team',\n      isMultiSelect: false,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      rows: [{\n        id: 1,\n        title: 'Team 1'\n      }, {\n        id: 2,\n        title: 'Team 2'\n      }],\n      isCustomRow: true\n    }, {\n      name: 'channels',\n      title: 'Channels',\n      icon: 'chat-outline',\n      isMultiSelect: true,\n      rowIdProperty: 'id',\n      rowTitleProperty: 'title',\n      rowCheckedProperty: 'isChecked',\n      errorMessage: '',\n      emptyMessage: '',\n      loadingMessage: '',\n      isLoading: false,\n      rows: [{\n        id: 1,\n        title: 'Channel 1',\n        isChecked: false\n      }, {\n        id: 2,\n        title: 'Channel 2',\n        isChecked: true\n      }],\n      isCustomRow: true\n    }]\n  }\n}",...CustomRowForBothColumns.parameters?.docs?.source}}}}}]);