"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[9862],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/two-column-dynamic-form-for/two-column-dynamic-form-for.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={component:"UiComponentsTwoColumnDynamicFormFor",parameters:{docs:{description:{component:"This component is used to render a dynamically built form same as DynamicFormFor but in a two column layout. The column for each field is calculated based on the field's position and fieldOptions.col_span property. col_span is either 1 or 2 that signifies whether the field spans across only one column or both columns."}}}},Default={render:({...args},{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"MIQ9DXos",block:'[[[1,"\\n                "],[8,[39,0],null,[["@schema","@model","@save","@class"],[[30,0,["schema"]],[30,0,["model"]],[30,0,["save"]],"ember-form two-column-layout"]],[["default"],[[[[1,"\\n                    "],[8,[30,1,["drawForm"]],null,null,null],[1,"\\n                "]],[1]]]]],[1,"\\n            "]],["f"],false,["ui-components/two-column-dynamic-form-for"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{schema:{description:"Form schema that contains all the fields configuration and the form options.",type:{name:"object"}},model:{description:"Model that will hold the values filled in the form.",type:{name:"object"}},save:{description:"Form submit callback function to save the model data.",type:{name:"function"}},reset:{description:"Form reset callback function to rollback the model data.",type:{name:"function"}},update:{description:"Callback to update a field value in the model. It receives the model, field name and field value.",type:{name:"function"}},class:{description:"Classes that are applied on the form element. Use .two-column-layout class to render the form in two column layout.",type:{name:"string"}},onFieldChange:{description:"Callback to apply any logic on change of field values. It receives the field name, field config and field value as arguments.",type:{name:"function"}},applyIncomingChange:{description:"This callback is triggered when user accepts the incoming change on a field in case of conflict. It receives propertyName, label and conflict action as arguments.",type:{name:"function"}},onFocusIn:{description:"Callback triggered when the form is in focus. This can be used to initialise any service like for adding the ctrl+enter support in the form.",type:{name:"function"}},submitButtonName:{description:"Label for submit button of the form.",type:{name:"string"}},cancelButtonName:{description:"Label for cancel button of the form.",type:{name:"string"}},fieldNameToHintComponentMap:{description:"Map of field name to its hint component path.",type:{name:"object"}},showErrors:{description:"Boolean to toggle the display of field errors for the form.",type:{name:"boolean"}},fieldActions:{description:"A map of field name to the object containing callbacks for createNewOption, createNewItem, search for auto-complete field etc.",type:{name:"object"}}},args:{schema:{formOptions:{reApplyValidations:!0,formId:"new-form"},fields:[{fieldType:null,type:1001,formId:29000057099,formservFieldName:null,name:"cf_single_line_text",columnName:"cf_str05",label:"Normal Single Line Text after a section",custom:!0,editable:!0,position:1,deleted:!1,visible:!0,builder:!0,validatable:!0,hint:null,fieldClass:null,regex:{},required:!1,link:null,placeholder:"Enter single line text",dataStore:null,fieldOptions:{col_span:1,allowClear:!0,escapeOptionText:!0},parent:null,choices:[],inputType:"text-field"},{fieldType:null,type:1021,formId:29000057099,formservFieldName:null,name:"cf_number",columnName:"cf_bigint01",label:"Number",custom:!0,editable:!0,position:2,deleted:!1,visible:!0,builder:!0,validatable:!0,hint:null,fieldClass:null,regex:{},required:!1,link:null,placeholder:"Enter number",dataStore:null,fieldOptions:{col_span:1,allowClear:!0,escapeOptionText:!0},parent:null,choices:[],inputType:"text-field"},{fieldType:null,type:1008,formId:29000057099,formservFieldName:null,name:"cf_paragraph",columnName:"cf_text01",label:"Paragraph",custom:!0,editable:!0,position:3,deleted:!1,visible:!0,builder:!0,validatable:!0,hint:null,fieldClass:null,regex:{},required:!1,link:null,placeholder:"Enter paragraph",dataStore:null,fieldOptions:{col_span:2,allowClear:!0,escapeOptionText:!0},parent:null,choices:[],inputType:"textarea-field"},{fieldType:null,type:1009,formId:29000057099,formservFieldName:null,name:"cf_url",columnName:"cf_str10",label:"URL",custom:!0,editable:!0,position:5,deleted:!1,visible:!0,builder:!0,validatable:!0,hint:null,fieldClass:null,regex:{},required:!1,link:null,placeholder:"Enter URL",dataStore:null,fieldOptions:{col_span:1,allowClear:!0,escapeOptionText:!0},parent:null,choices:[],inputType:"url-field"},{fieldType:null,type:1007,formId:29000057099,formservFieldName:null,name:"cf_date_with_time",columnName:"cf_date02",label:"Date with time",custom:!0,editable:!0,position:6,deleted:!1,visible:!0,builder:!0,validatable:!0,hint:null,fieldClass:null,regex:{},required:!1,link:null,placeholder:"",dataStore:null,fieldOptions:{col_span:1,allowClear:!0,escapeOptionText:!0,dateFormat:"DD MMM, YYYY",twentyFourHrFormat:!1},parent:null,choices:[],inputType:"date-time-split-field"}]},model:{customField:{cf_single_line_text:"",cf_number:2,cf_paragraph:"",cf_url:"",cf_date_with_time:null}},save:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Form submit button clicked")()}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: ({\n    ...args\n  }, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                <UiComponents::TwoColumnDynamicFormFor\n                    @schema={{this.schema}}\n                    @model={{this.model}}\n                    @save={{this.save}}\n                    @class="ember-form two-column-layout" as |f| >\n                    <f.drawForm />\n                </UiComponents::TwoColumnDynamicFormFor>\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: \'Default\',\n  argTypes: {\n    schema: {\n      description: \'Form schema that contains all the fields configuration and the form options.\',\n      type: {\n        name: \'object\'\n      }\n    },\n    model: {\n      description: \'Model that will hold the values filled in the form.\',\n      type: {\n        name: \'object\'\n      }\n    },\n    save: {\n      description: \'Form submit callback function to save the model data.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    reset: {\n      description: \'Form reset callback function to rollback the model data.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    update: {\n      description: \'Callback to update a field value in the model. It receives the model, field name and field value.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    class: {\n      description: \'Classes that are applied on the form element. Use .two-column-layout class to render the form in two column layout.\',\n      type: {\n        name: \'string\'\n      }\n    },\n    onFieldChange: {\n      description: \'Callback to apply any logic on change of field values. It receives the field name, field config and field value as arguments.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    applyIncomingChange: {\n      description: \'This callback is triggered when user accepts the incoming change on a field in case of conflict. It receives propertyName, label and conflict action as arguments.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    onFocusIn: {\n      description: \'Callback triggered when the form is in focus. This can be used to initialise any service like for adding the ctrl+enter support in the form.\',\n      type: {\n        name: \'function\'\n      }\n    },\n    submitButtonName: {\n      description: \'Label for submit button of the form.\',\n      type: {\n        name: \'string\'\n      }\n    },\n    cancelButtonName: {\n      description: \'Label for cancel button of the form.\',\n      type: {\n        name: \'string\'\n      }\n    },\n    fieldNameToHintComponentMap: {\n      description: \'Map of field name to its hint component path.\',\n      type: {\n        name: \'object\'\n      }\n    },\n    showErrors: {\n      description: \'Boolean to toggle the display of field errors for the form.\',\n      type: {\n        name: \'boolean\'\n      }\n    },\n    fieldActions: {\n      description: \'A map of field name to the object containing callbacks for createNewOption, createNewItem, search for auto-complete field etc.\',\n      type: {\n        name: \'object\'\n      }\n    }\n  },\n  args: {\n    schema: {\n      formOptions: {\n        "reApplyValidations": true,\n        "formId": "new-form"\n      },\n      fields: [{\n        "fieldType": null,\n        "type": 1001,\n        "formId": 29000057099,\n        "formservFieldName": null,\n        "name": "cf_single_line_text",\n        "columnName": "cf_str05",\n        "label": "Normal Single Line Text after a section",\n        "custom": true,\n        "editable": true,\n        "position": 1,\n        "deleted": false,\n        "visible": true,\n        "builder": true,\n        "validatable": true,\n        "hint": null,\n        "fieldClass": null,\n        "regex": {},\n        "required": false,\n        "link": null,\n        "placeholder": "Enter single line text",\n        "dataStore": null,\n        "fieldOptions": {\n          "col_span": 1,\n          "allowClear": true,\n          "escapeOptionText": true\n        },\n        "parent": null,\n        "choices": [],\n        "inputType": "text-field"\n      }, {\n        "fieldType": null,\n        "type": 1021,\n        "formId": 29000057099,\n        "formservFieldName": null,\n        "name": "cf_number",\n        "columnName": "cf_bigint01",\n        "label": "Number",\n        "custom": true,\n        "editable": true,\n        "position": 2,\n        "deleted": false,\n        "visible": true,\n        "builder": true,\n        "validatable": true,\n        "hint": null,\n        "fieldClass": null,\n        "regex": {},\n        "required": false,\n        "link": null,\n        "placeholder": "Enter number",\n        "dataStore": null,\n        "fieldOptions": {\n          "col_span": 1,\n          "allowClear": true,\n          "escapeOptionText": true\n        },\n        "parent": null,\n        "choices": [],\n        "inputType": "text-field"\n      }, {\n        "fieldType": null,\n        "type": 1008,\n        "formId": 29000057099,\n        "formservFieldName": null,\n        "name": "cf_paragraph",\n        "columnName": "cf_text01",\n        "label": "Paragraph",\n        "custom": true,\n        "editable": true,\n        "position": 3,\n        "deleted": false,\n        "visible": true,\n        "builder": true,\n        "validatable": true,\n        "hint": null,\n        "fieldClass": null,\n        "regex": {},\n        "required": false,\n        "link": null,\n        "placeholder": "Enter paragraph",\n        "dataStore": null,\n        "fieldOptions": {\n          "col_span": 2,\n          "allowClear": true,\n          "escapeOptionText": true\n        },\n        "parent": null,\n        "choices": [],\n        "inputType": "textarea-field"\n      }, {\n        "fieldType": null,\n        "type": 1009,\n        "formId": 29000057099,\n        "formservFieldName": null,\n        "name": "cf_url",\n        "columnName": "cf_str10",\n        "label": "URL",\n        "custom": true,\n        "editable": true,\n        "position": 5,\n        "deleted": false,\n        "visible": true,\n        "builder": true,\n        "validatable": true,\n        "hint": null,\n        "fieldClass": null,\n        "regex": {},\n        "required": false,\n        "link": null,\n        "placeholder": "Enter URL",\n        "dataStore": null,\n        "fieldOptions": {\n          "col_span": 1,\n          "allowClear": true,\n          "escapeOptionText": true\n        },\n        "parent": null,\n        "choices": [],\n        "inputType": "url-field"\n      }, {\n        "fieldType": null,\n        "type": 1007,\n        "formId": 29000057099,\n        "formservFieldName": null,\n        "name": "cf_date_with_time",\n        "columnName": "cf_date02",\n        "label": "Date with time",\n        "custom": true,\n        "editable": true,\n        "position": 6,\n        "deleted": false,\n        "visible": true,\n        "builder": true,\n        "validatable": true,\n        "hint": null,\n        "fieldClass": null,\n        "regex": {},\n        "required": false,\n        "link": null,\n        "placeholder": "",\n        "dataStore": null,\n        "fieldOptions": {\n          "col_span": 1,\n          "allowClear": true,\n          "escapeOptionText": true,\n          "dateFormat": "DD MMM, YYYY",\n          "twentyFourHrFormat": false\n        },\n        "parent": null,\n        "choices": [],\n        "inputType": "date-time-split-field"\n      }]\n    },\n    model: {\n      customField: {\n        cf_single_line_text: \'\',\n        cf_number: 2,\n        cf_paragraph: \'\',\n        cf_url: \'\',\n        cf_date_with_time: null\n      }\n    },\n    save: () => action(\'Form submit button clicked\')()\n  }\n}',...Default.parameters?.docs?.source}}}}}]);