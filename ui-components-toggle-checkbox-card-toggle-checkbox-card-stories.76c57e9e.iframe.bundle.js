"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4570],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/toggle-checkbox-card/toggle-checkbox-card.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/toggle-checkbox-card",component:"UiComponentsToggleCheckboxCard",parameters:{docs:{description:{component:"The ToggleCheckboxCard component is a versatile UI component that combines a toggle switch with additional card information. It allows users to toggle a switch and provides options for label interaction and additional actions through yielded content."}}}},Default={render:args=>({template:Ember.HTMLBars.template({id:"G+/DU7Lt",block:'[[[1,"\\n        "],[8,[39,0],null,[["@value","@disabled","@refreshToggle","@info","@onToggleSwitch","@labelRouteInfo","@showBtnsOnHover"],[[30,0,["value"]],[30,0,["disabled"]],[30,0,["refreshToggle"]],[30,0,["info"]],[30,0,["onToggleSwitch"]],[30,0,["labelRouteInfo"]],[30,0,["showBtnsOnHover"]]]],[["default"],[[[[1,"\\n          "],[11,"button"],[24,"data-test-id","template-edit-button"],[24,0,"btn btn-icon"],[24,4,"button"],[4,[38,1],["click",[28,[37,2],[[30,0,["triggerEdit"]],[30,0,["template"]]],null]],null],[12],[1,"\\n            "],[1,[28,[35,3],["edit"],null]],[1,"\\n          "],[13],[1,"\\n          "],[11,"button"],[24,"data-test-id","template-delete-button"],[24,0,"btn btn-icon"],[24,4,"button"],[4,[38,1],["click",[28,[37,2],[[30,0,["triggerDelete"]],[30,0,["template"]]],null]],null],[12],[1,"\\n            "],[1,[28,[35,3],["delete"],null]],[1,"\\n          "],[13],[1,"\\n        "]],[]]]]],[1,"\\n      "]],[],false,["ui-components/toggle-checkbox-card","on","fn","svg-jar"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args}}),name:"Default",argTypes:{value:{type:"boolean",description:"The current state of the toggle switch."},disabled:{type:"boolean",description:"Disables the toggle switch if set to true."},refreshToggle:{type:"boolean",description:"Determines the visibility of toggle switch."},info:{type:"object",description:"Contains label and subtext information for the card."},onToggleSwitch:{type:"function",description:"Callback function triggered when the toggle switch is changed."},labelRouteInfo:{type:"object",description:"Route information for the label link."},showBtnsOnHover:{type:"boolean",description:"Shows additional buttons when hovering over the card."},templateId:{type:"string",description:"The ID of the template for routing purposes."},triggerDelete:{type:"function",description:"Function just used for demo purpose, not an actual argument to be passed."},triggerEdit:{type:"function",description:"Function just used for demo purpose, not an actual argument to be passed."}},args:{value:!1,disabled:!1,refreshToggle:!1,info:{label:"Sample Label",subText:"Sample Subtext"},onToggleSwitch:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Toggle switch changed")(),labelRouteInfo:{route:"admin.document-templates.edit",model:"sample-id"},showBtnsOnHover:!0,templateId:"sample-id",triggerDelete:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Trigger delete")(),triggerEdit:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Trigger edit")()}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n        <UiComponents::ToggleCheckboxCard\n          @value={{this.value}}\n          @disabled={{this.disabled}}\n          @refreshToggle={{this.refreshToggle}}\n          @info={{this.info}}\n          @onToggleSwitch={{this.onToggleSwitch}}\n          @labelRouteInfo={{this.labelRouteInfo}}\n          @showBtnsOnHover={{this.showBtnsOnHover}}\n        >\n          <button\n            type=\"button\"\n            data-test-id=\"template-edit-button\"\n            class=\"btn btn-icon\"\n            {{on \"click\" (fn this.triggerEdit this.template)}}\n          >\n            {{svg-jar \"edit\" }}\n          </button>\n          <button\n            type=\"button\"\n            data-test-id=\"template-delete-button\"\n            class=\"btn btn-icon\"\n            {{on \"click\" (fn this.triggerDelete this.template)}}\n          >\n            {{svg-jar \"delete\" }}\n          </button>\n        </UiComponents::ToggleCheckboxCard>\n      `,\n      context: {\n        ...args\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    value: {\n      type: 'boolean',\n      description: 'The current state of the toggle switch.'\n    },\n    disabled: {\n      type: 'boolean',\n      description: 'Disables the toggle switch if set to true.'\n    },\n    refreshToggle: {\n      type: 'boolean',\n      description: 'Determines the visibility of toggle switch.'\n    },\n    info: {\n      type: 'object',\n      description: 'Contains label and subtext information for the card.'\n    },\n    onToggleSwitch: {\n      type: 'function',\n      description: 'Callback function triggered when the toggle switch is changed.'\n    },\n    labelRouteInfo: {\n      type: 'object',\n      description: 'Route information for the label link.'\n    },\n    showBtnsOnHover: {\n      type: 'boolean',\n      description: 'Shows additional buttons when hovering over the card.'\n    },\n    templateId: {\n      type: 'string',\n      description: 'The ID of the template for routing purposes.'\n    },\n    triggerDelete: {\n      type: 'function',\n      description: 'Function just used for demo purpose, not an actual argument to be passed.'\n    },\n    triggerEdit: {\n      type: 'function',\n      description: 'Function just used for demo purpose, not an actual argument to be passed.'\n    }\n  },\n  args: {\n    value: false,\n    disabled: false,\n    refreshToggle: false,\n    info: {\n      label: 'Sample Label',\n      subText: 'Sample Subtext'\n    },\n    onToggleSwitch: () => action('Toggle switch changed')(),\n    labelRouteInfo: {\n      route: 'admin.document-templates.edit',\n      model: 'sample-id'\n    },\n    showBtnsOnHover: true,\n    templateId: 'sample-id',\n    triggerDelete: () => action('Trigger delete')(),\n    triggerEdit: () => action('Trigger edit')()\n  }\n}",...Default.parameters?.docs?.source}}}}}]);