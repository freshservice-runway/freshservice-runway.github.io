"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[2298],{"./app/components/ui-components/multi-select-groups-as-tabs/multi-select-groups-as-tabs.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const agentGroupService=Ember.getOwner(this).lookup("service:agentsGroups");this.set("agentGroupService",agentGroupService),await agentGroupService.taskInstance;const initialOptions=[{id:"agents",groupName:"Agents",options:agentGroupService.agents.toArray()},{id:"agentGroups",groupName:"Groups",options:agentGroupService.groups.toArray()}];this.set("options",initialOptions),this.set("object",{responders:[]})})),__WEBPACK_DEFAULT_EXPORT__={component:"UiComponentsMultiSelectGroupsAsTabs",parameters:{docs:{description:{component:"This component takes an array of objects with each object containing groupName and options. Each object is rendered as tab with groupName shown as Tab name and tab content will have all the options."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"Lo1s9KaX",block:'[[[1,"\\n"],[41,[28,[37,1],[[33,2,["isFinished"]],[30,0,["translationsLoaded"]]],null],[[[1,"\\t\\t\\t\\t\\t\\t\\t\\t"],[8,[39,3],null,[["@propertyName","@formScope","@options","@onOptionChange","@object","@search","@label","@optionLabelPath","@required","@disabled","@placeholder","@fieldClasses","@labelClasses","@fieldActions","@showHint","@hintMessage"],[[99,4,["@propertyName"]],[99,5,["@formScope"]],[99,6,["@options"]],[99,7,["@onOptionChange"]],[99,8,["@object"]],[99,9,["@search"]],[99,10,["@label"]],[99,11,["@optionLabelPath"]],[99,12,["@required"]],[99,13,["@disabled"]],[99,14,["@placeholder"]],[99,15,["@fieldClasses"]],[99,16,["@labelClasses"]],[99,17,["@fieldActions"]],[99,18,["@showHint"]],[99,19,["@hintMessage"]]]],null],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","and","agentGroupService","ui-components/multi-select-groups-as-tabs","propertyName","formScope","options","onOptionChange","object","search","label","optionLabelPath","required","disabled","placeholder","fieldClasses","labelClasses","fieldActions","showHint","hintMessage"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,createStoreMock:createStoreMock(),loadTranslations:loadTranslations()}}),name:"Default",argTypes:{propertyName:{description:"Property of the object passed",type:{name:"string",required:!0}},formScope:{description:"Formscope of the multi select",control:{disable:!0},type:{name:"object"}},options:{description:"Options for the multi select",type:{name:"array",required:!0}},onOptionChange:{description:"Action which will be triggered when a value is selected from the dropdown",control:{disable:!0},type:{name:"method"}},object:{description:"Object in which the values will be stored",type:{name:"object",required:!0}},search:{description:"Action which will be triggered when a value is searched in the input box",control:{disable:!0},type:{name:"method"}},label:{description:"Label for the multi select",type:{name:"string"}},optionLabelPath:{description:"Label of the option which needs to be displayed",type:{name:"string"}},required:{description:"Indicates whether the multi select value is required or not",type:{name:"boolean"}},disabled:{description:"Indicates whether the multi select is disabled or not",type:{name:"boolean"}},placeholder:{description:"Placeholder text for the input box",type:{name:"string"}},fieldClasses:{description:"Extra classes for the multi select field",type:{name:"string"}},labelClasses:{description:"Extra classes for the label of multi select field",type:{name:"string"}},fieldActions:{description:"Defines actions which needs to be triggered for an operation",control:{disable:!0},type:{name:"object"}},showHint:{description:"Show any custom hint message",type:{name:"boolean"}},hintMessage:{description:"Any custom hint message to be displayed",type:{name:"string"}}},args:{propertyName:"responders",formScope:{showErrorMessage:!0},label:"Label",optionLabelPath:"nameWithType",required:!0,disabled:!1,placeholder:"Add responders",showHint:!1,hintMessage:"Hint Message"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                            {{#if (and agentGroupService.isFinished this.translationsLoaded)}}\n                                <UiComponents::MultiSelectGroupsAsTabs\n                                    @propertyName = {{propertyName}}\n                                    @formScope= {{formScope}}\n                                    @options={{options}}\n                                    @onOptionChange = {{onOptionChange}}\n                                    @object = {{object}}\n                                    @search = {{search}}\n                                    @label = {{label}}\n                                    @optionLabelPath = {{optionLabelPath}}\n                                    @required = {{required}}\n                                    @disabled = {{disabled}}\n                                    @placeholder = {{placeholder}}\n                                    @fieldClasses = {{fieldClasses}}\n                                    @labelClasses = {{labelClasses}}\n                                    @fieldActions = {{fieldActions}}\n                                    @showHint = {{showHint}}\n                                    @hintMessage = {{hintMessage}}\n                                />\n                            {{/if}}\n            `,\n      context: {\n        ...args,\n        createStoreMock: createStoreMock(),\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    propertyName: {\n      description: 'Property of the object passed',\n      type: {\n        name: 'string',\n        required: true\n      }\n    },\n    formScope: {\n      description: 'Formscope of the multi select',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'object'\n      }\n    },\n    options: {\n      description: 'Options for the multi select',\n      type: {\n        name: 'array',\n        required: true\n      }\n    },\n    onOptionChange: {\n      description: 'Action which will be triggered when a value is selected from the dropdown',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'method'\n      }\n    },\n    object: {\n      description: 'Object in which the values will be stored',\n      type: {\n        name: 'object',\n        required: true\n      }\n    },\n    search: {\n      description: 'Action which will be triggered when a value is searched in the input box',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'method'\n      }\n    },\n    label: {\n      description: 'Label for the multi select',\n      type: {\n        name: 'string'\n      }\n    },\n    optionLabelPath: {\n      description: 'Label of the option which needs to be displayed',\n      type: {\n        name: 'string'\n      }\n    },\n    required: {\n      description: 'Indicates whether the multi select value is required or not',\n      type: {\n        name: 'boolean'\n      }\n    },\n    disabled: {\n      description: 'Indicates whether the multi select is disabled or not',\n      type: {\n        name: 'boolean'\n      }\n    },\n    placeholder: {\n      description: 'Placeholder text for the input box',\n      type: {\n        name: 'string'\n      }\n    },\n    fieldClasses: {\n      description: 'Extra classes for the multi select field',\n      type: {\n        name: 'string'\n      }\n    },\n    labelClasses: {\n      description: 'Extra classes for the label of multi select field',\n      type: {\n        name: 'string'\n      }\n    },\n    fieldActions: {\n      description: 'Defines actions which needs to be triggered for an operation',\n      control: {\n        disable: true\n      },\n      type: {\n        name: 'object'\n      }\n    },\n    showHint: {\n      description: 'Show any custom hint message',\n      type: {\n        name: 'boolean'\n      }\n    },\n    hintMessage: {\n      description: 'Any custom hint message to be displayed',\n      type: {\n        name: 'string'\n      }\n    }\n  },\n  args: {\n    propertyName: 'responders',\n    formScope: {\n      showErrorMessage: true\n    },\n    label: 'Label',\n    optionLabelPath: 'nameWithType',\n    required: true,\n    disabled: false,\n    placeholder: 'Add responders',\n    showHint: false,\n    hintMessage: 'Hint Message'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);