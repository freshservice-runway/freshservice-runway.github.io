"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[7338],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/alerts/alerts.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/alerts",component:"UiComponentsAlerts",parameters:{docs:{description:{component:"The UiComponents::Alerts component is used to display alert banners with customizable types, icons, and close functionality. It supports different alert types such as warning, error, and success, and can be configured to be removable or not."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"WiJdcGZn",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@class","@type","@onClose","@removable","@isOpen","@icon"],[[30,0,["class"]],[30,0,["type"]],[30,0,["onClose"]],[30,0,["removable"]],[30,0,["isOpen"]],[30,0,["icon"]]]],[["default"],[[[[1,"\\n          This is a sample alert message to demonstrate how the alert component works. It provides important information to the user and can be customized to display different types of alerts such as success, error, warning, and info. Make sure to use this component to notify users about important updates or actions they need to take.\\n          "]],[]]]]],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/alerts"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{class:{type:"string",description:"Custom CSS class for the alert component"},type:{type:"string",description:"Type of alert (e.g., warning, error, success)",options:["warning","error","success","info"],control:{type:"select"}},onClose:{type:"function",description:"Callback function triggered when the alert is closed"},removable:{type:"boolean",description:"Determines if the alert can be removed"},isOpen:{type:"boolean",description:"Controls the visibility of the alert"},icon:{type:"string",description:"Icon to be displayed in the alert"}},args:{class:"custom-class",type:"error",onClose:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Alert closed")(),removable:!0,isOpen:!0,icon:"alert-orange"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded}}\n          <UiComponents::Alerts\n            @class={{this.class}}\n            @type={{this.type}}\n            @onClose={{this.onClose}}\n            @removable={{this.removable}}\n            @isOpen={{this.isOpen}}\n            @icon={{this.icon}}\n          >\n          This is a sample alert message to demonstrate how the alert component works. It provides important information to the user and can be customized to display different types of alerts such as success, error, warning, and info. Make sure to use this component to notify users about important updates or actions they need to take.\n          </UiComponents::Alerts>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    class: {\n      type: 'string',\n      description: 'Custom CSS class for the alert component'\n    },\n    type: {\n      type: 'string',\n      description: 'Type of alert (e.g., warning, error, success)',\n      options: ['warning', 'error', 'success', 'info'],\n      control: {\n        type: 'select'\n      }\n    },\n    onClose: {\n      type: 'function',\n      description: 'Callback function triggered when the alert is closed'\n    },\n    removable: {\n      type: 'boolean',\n      description: 'Determines if the alert can be removed'\n    },\n    isOpen: {\n      type: 'boolean',\n      description: 'Controls the visibility of the alert'\n    },\n    icon: {\n      type: 'string',\n      description: 'Icon to be displayed in the alert'\n    }\n  },\n  args: {\n    class: 'custom-class',\n    type: 'error',\n    onClose: () => action('Alert closed')(),\n    removable: true,\n    isOpen: true,\n    icon: 'alert-orange'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);