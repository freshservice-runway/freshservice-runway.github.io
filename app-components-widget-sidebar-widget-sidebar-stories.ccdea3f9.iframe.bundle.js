"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[3489],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/app-components/widget-sidebar/widget-sidebar.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>widget_sidebar_stories});__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const WIDGET_ID_BY_NAME=[["jira","jira-app-widget"],["freshdesk","freshdesk-app-widget"],["pagerduty","pagerduty-app-widget"],["logmein","logmein-app-widget"],["pivotal_tracker","pivotal-tracker-app-widget"]].reduce(((acc,arr)=>(acc[arr[0]]=arr[1],acc)),{}),widget_sidebar_stories=([["jira","Atlassian Jira"],["freshdesk","FreshDesk"],["pagerduty","Pagerduty"],["logmein","Logmein rescue"],["pivotal_tracker","Pivotal tracker"],["sfb","Skype for Business"],["skype","Skype"],["office365","Office 365"],["salesforce","Salesforce"],["harvest","Harvest"],["freshbooks","Freshbooks"],["quickbooks","Quickbooks"],["workflow_max","Workflowmax"]].reduce(((acc,arr)=>(acc[arr[0]]=arr[1],acc)),{}),{title:"app-components/widget-sidebar",component:"AppComponentsWidgetSidebar",parameters:{docs:{description:{component:"The Widget Sidebar component is designed to display a sidebar with various widgets. It supports different configurations for default and application-specific widgets, and adapts its layout based on the browser being used."}}}}),provideAllAbilities=()=>Ember.on("init",(async function(){const currentUser=Ember.getOwner(this).lookup("service:current-user");Ember.setProperties(currentUser,{hasAbilities:()=>!0,hasScopedAbilities:()=>!0})})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"Q8tkV2iw",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@module","@page","@className","@defaultWidgetIcons","@defaultSelectedWidget","@applicationWidgetIcon","@internalWidgets","@nativeSidebarSupportedApps","@sidebarLoading"],[[30,0,["module"]],[30,0,["page"]],[30,0,["className"]],[30,0,["defaultWidgetIcons"]],[30,0,["defaultSelectedWidget"]],[30,0,["applicationWidgetIcon"]],[30,0,["internalWidgets"]],[30,0,["nativeSidebarSupportedApps"]],[30,0,["sidebarLoading"]]]],[["default"],[[[[1,"\\n            "],[10,0],[12],[1,"Sample content for the sidebar"],[13],[1,"\\n          "]],[]]]]],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","app-components/widget-sidebar"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),provideAllAbilities:provideAllAbilities()}}),name:"Default",argTypes:{module:{type:"string",description:"The module name for the sidebar."},page:{type:"string",description:"The page name for the sidebar."},className:{type:"string",description:"Additional class names for styling the sidebar."},defaultWidgetIcons:{type:"array",description:"Array of default widget icons and their configurations."},defaultSelectedWidget:{type:"string",description:"The default selected widget ID."},applicationWidgetIcon:{type:"object",description:"Configuration for the application widget icon."},internalWidgets:{type:"object",description:"Mapping of native apps rendered inside other parent widgets."},nativeSidebarSupportedApps:{type:"array",description:"List of native apps supported in the sidebar."},sidebarLoading:{type:"boolean",description:"Indicates if the sidebar is in a loading state."}},args:{module:"change",page:"details",className:"tcpr-details-sidebar",defaultWidgetIcons:[],defaultSelectedWidget:WIDGET_ID_BY_NAME.jira,applicationWidgetIcon:{id:"",svgName:"",widgetClass:"tcpr-quick-icon",tooltipText:"",tooltipClass:"info-tooltip-container quick-action-tooltip"},internalWidgets:{},nativeSidebarSupportedApps:[],sidebarLoading:!1}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <AppComponents::WidgetSidebar\n            @module={{this.module}}\n            @page={{this.page}}\n            @className={{this.className}}\n            @defaultWidgetIcons={{this.defaultWidgetIcons}}\n            @defaultSelectedWidget={{this.defaultSelectedWidget}}\n            @applicationWidgetIcon={{this.applicationWidgetIcon}}\n            @internalWidgets={{this.internalWidgets}}\n            @nativeSidebarSupportedApps={{this.nativeSidebarSupportedApps}}\n            @sidebarLoading={{this.sidebarLoading}}\n          >\n            <div>Sample content for the sidebar</div>\n          </AppComponents::WidgetSidebar>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        provideAllAbilities: provideAllAbilities()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    module: {\n      type: 'string',\n      description: 'The module name for the sidebar.'\n    },\n    page: {\n      type: 'string',\n      description: 'The page name for the sidebar.'\n    },\n    className: {\n      type: 'string',\n      description: 'Additional class names for styling the sidebar.'\n    },\n    defaultWidgetIcons: {\n      type: 'array',\n      description: 'Array of default widget icons and their configurations.'\n    },\n    defaultSelectedWidget: {\n      type: 'string',\n      description: 'The default selected widget ID.'\n    },\n    applicationWidgetIcon: {\n      type: 'object',\n      description: 'Configuration for the application widget icon.'\n    },\n    internalWidgets: {\n      type: 'object',\n      description: 'Mapping of native apps rendered inside other parent widgets.'\n    },\n    nativeSidebarSupportedApps: {\n      type: 'array',\n      description: 'List of native apps supported in the sidebar.'\n    },\n    sidebarLoading: {\n      type: 'boolean',\n      description: 'Indicates if the sidebar is in a loading state.'\n    }\n  },\n  args: {\n    module: 'change',\n    page: 'details',\n    className: 'tcpr-details-sidebar',\n    defaultWidgetIcons: [],\n    defaultSelectedWidget: WIDGET_ID_BY_NAME['jira'],\n    applicationWidgetIcon: APPLICATION_WIDGET_ICON,\n    internalWidgets: {},\n    nativeSidebarSupportedApps: [],\n    sidebarLoading: false\n  }\n}",...Default.parameters?.docs?.source}}}}}]);