"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6210],{"./app/components/ui-components/simple-carousel/simple-carousel.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/simple-carousel",component:"UiComponentsSimpleCarousel"},Default={render:args=>({template:Ember.HTMLBars.template({id:"EiXvuGSP",block:'[[[1,"\\n                "],[8,[39,0],null,[["@carouselSize","@carouselTimeInS","@restartOnSet"],[[30,0,["carouselSize"]],[30,0,["carouselTimeInS"]],[30,0,["restartOnSet"]]]],[["default"],[[[[1,"\\n                  "],[10,0],[12],[1,"\\n                    "],[10,2],[12],[1,"\\n                      Current Carousel is "],[1,[30,1,["currentTab"]]],[1,"\\n                      "],[10,"br"],[12],[13],[1,"\\n                      rendered UI is passed as child components that consume simple carousel API\\n                    "],[13],[1,"\\n                    "],[10,"br"],[12],[13],[10,"br"],[12],[13],[1,"\\n                  "],[13],[1,"\\n                  "],[10,0],[12],[1,"\\n"],[42,[28,[37,2],[[28,[37,2],[[28,[37,3],[0,[30,0,["carouselSize"]]],null]],null]],null],null,[[[1,"                          "],[11,"button"],[16,0,[29,["btn ",[52,[28,[37,5],[[30,2],[30,1,["currentTab"]]],null],"active",""]]]],[4,[38,6],["click",[28,[37,7],[[30,1,["setCurrentTab"]],[30,2]],null]],null],[12],[1,[30,2]],[13],[1,"\\n"]],[2]],null],[1,"                  "],[13],[1,"\\n                "]],[1]]]]],[1,"\\n"]],["sc","value"],false,["ui-components/simple-carousel","each","-track-array","range","if","eq","on","fn"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args}}),name:"Default",argTypes:{carouselSize:{description:"The size of the carousel",type:"number"},carouselTimeInS:{description:"The time after which the carousel should move to next slide automatically, expressed in seconds",type:"number"},restartOnSet:{description:"Make the timer start from 0, when current slide is set using the setCurrentTab method",type:"boolean"}},args:{carouselSize:5,carouselTimeInS:2,restartOnSet:!0}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <UiComponents::SimpleCarousel\n                  @carouselSize={{this.carouselSize}}\n                  @carouselTimeInS={{this.carouselTimeInS}}\n                  @restartOnSet={{this.restartOnSet}}\n                  as |sc|\n                >\n                  <div>\n                    <p>\n                      Current Carousel is {{sc.currentTab}}\n                      <br>\n                      rendered UI is passed as child components that consume simple carousel API\n                    </p>\n                    <br><br>\n                  </div>\n                  <div>\n                      {{#each (range 0 this.carouselSize) as |value|}}\n                          <button class='btn {{if (eq value sc.currentTab) 'active' ''}}'  {{on 'click' (fn sc.setCurrentTab value)}}>{{value}}</button>\n                      {{/each}}\n                  </div>\n                </UiComponents::SimpleCarousel>\n`,\n      context: {\n        ...args\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    carouselSize: {\n      description: 'The size of the carousel',\n      type: 'number'\n    },\n    carouselTimeInS: {\n      description: 'The time after which the carousel should move to next slide automatically, expressed in seconds',\n      type: 'number'\n    },\n    restartOnSet: {\n      description: 'Make the timer start from 0, when current slide is set using the setCurrentTab method',\n      type: 'boolean'\n    }\n  },\n  args: {\n    carouselSize: 5,\n    carouselTimeInS: 2,\n    restartOnSet: true\n  }\n}",...Default.parameters?.docs?.source}}}}}]);