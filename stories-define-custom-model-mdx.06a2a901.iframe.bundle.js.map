{"version":3,"file":"stories-define-custom-model-mdx.06a2a901.iframe.bundle.js","mappings":";;;;;;;;;;;;;AAyCA","sources":["webpack://freshservice/./app/utils/stories/define-custom-model.mdx"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/runner/_work/itildesk/itildesk/frontend/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Source} from '@storybook/blocks';\nimport dedent from 'ts-dedent';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Utils/define-custom-model\"\n    }), \"\\n\", _jsx(\"div\", {\n      className: \"subheading\",\n      children: \"defineCustomModel\"\n    }), \"\\n\", _jsxs(\"ol\", {\n      class: \"api-list\",\n      children: [_jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"defineCustomModel\"\n        }), \" - This util is used to define custom fields in run time in a module's model so that\\nwe can leverage the ember's capability to observe attribute change in the custom fields also\"]\n      }), _jsx(\"br\", {}), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    import defineCustomModel from 'freshservice/utils/define-custom-model';\n \n    defineCustomModel({\n        fieldsModelName: 'task-custom-field',\n        customModel: CustomField,\n        callBack: callBack     \n    }, this.store).then(() => {\n        /** do the respective action **/\n    })\n \n    //CustomField -- model for dynamically added custom fields\n    //callBack -- method that triggers post addition of the custom fields to the model\n`\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n"],"names":[],"sourceRoot":""}