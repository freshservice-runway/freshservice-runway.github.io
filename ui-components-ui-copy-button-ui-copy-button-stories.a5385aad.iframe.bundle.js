"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[2234],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/ui-copy-button/ui-copy-button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/ui-copy-button",component:"UiComponentsUiCopyButton"},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"kZ9XKfMu",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"              "],[10,0],[14,0,"flex flex-center"],[14,5,"height:200px"],[12],[1,"\\n                  "],[8,[39,1],null,[["@clipboardText","@toolTipPosition","@type","@showText","@textPath","@onCopy"],[[99,2,["@clipboardText"]],[99,3,["@toolTipPosition"]],[99,4,["@type"]],[99,5,["@showText"]],[99,6,["@textPath"]],[99,7,["@onCopy"]]]],null],[1,"\\n              "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/ui-copy-button","clipboardText","toolTipPosition","type","showText","textPath","onCopy"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{clipboardText:{description:"Text to copy",type:"string"},toolTipPosition:{description:"Position of tooltip. Defaults to `bottom`",type:"select",options:["top","right","bottom","left","top-left","top-right","bottom-left","bottom-right"]},textPath:{description:"Hint translation text. Defaults to `fs.common.copy(Copy)`",type:"string"},showText:{description:"Show the text defined in textPath next to icon. Defaults to `false`",type:"boolean"},onCopy:{description:"Callback function for copy button click"},type:{description:"Type of the button. Defaults to `button`",type:"select",options:["button","link"]}},args:{clipboardText:"text to copy",toolTipPosition:"bottom",textPath:"fs.common.copy_url",showText:!1,onCopy:function(){(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Copy button was clicked")()},type:"button"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n            {{#if this.translationsLoaded}}\n              <div class='flex flex-center' style='height:200px'>\n                  <UiComponents::UiCopyButton\n                    @clipboardText={{clipboardText}}\n                    @toolTipPosition={{toolTipPosition}}\n                    @type={{type}}\n                    @showText={{showText}}\n                    @textPath={{textPath}}\n                    @onCopy={{onCopy}} />\n              </div>\n            {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    clipboardText: {\n      description: 'Text to copy',\n      type: 'string'\n    },\n    toolTipPosition: {\n      description: 'Position of tooltip. Defaults to `bottom`',\n      type: 'select',\n      options: ['top', 'right', 'bottom', 'left', 'top-left', 'top-right', 'bottom-left', 'bottom-right']\n    },\n    textPath: {\n      description: 'Hint translation text. Defaults to `fs.common.copy(Copy)`',\n      type: 'string'\n    },\n    showText: {\n      description: 'Show the text defined in textPath next to icon. Defaults to `false`',\n      type: 'boolean'\n    },\n    onCopy: {\n      description: 'Callback function for copy button click'\n    },\n    type: {\n      description: 'Type of the button. Defaults to `button`',\n      type: 'select',\n      options: ['button', 'link']\n    }\n  },\n  args: {\n    clipboardText: 'text to copy',\n    toolTipPosition: 'bottom',\n    textPath: 'fs.common.copy_url',\n    showText: false,\n    onCopy: function () {\n      action('Copy button was clicked')();\n    },\n    type: 'button'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);