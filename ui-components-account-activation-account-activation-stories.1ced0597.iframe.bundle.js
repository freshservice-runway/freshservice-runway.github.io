"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6452],{"./app/components/ui-components/account-activation/account-activation.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/account-activation",component:"UiComponentsAccountActivation",parameters:{docs:{description:{component:"The Account Activation component is responsible for checking if the current user has an active Fresh ID. If the user has an active Fresh ID, it yields the content; otherwise, it displays a page error with a specific image and translated text for the title and description."}}}},mockCurrentUser=hasActiveFreshId=>Ember.on("init",(async function(){const currentUser=Ember.getOwner(this).lookup("service:current-user");Ember.setProperties(currentUser,{hasActiveFreshId})})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"yStzqMxf",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,null,null],[1,"\\n          "],[8,[39,2],null,null,[["default"],[[[[1,"\\n            Sample page content\\n          "]],[]]]]],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/app-toaster","ui-components/account-activation"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),mockCurrentUser:mockCurrentUser(args.hasActiveFreshId)}}),name:"Default",argTypes:{hasActiveFreshId:{type:"boolean",description:"Indicates if the current user has an active Fresh ID. (This data is internally computed by the component from currentUser service)"}},args:{hasActiveFreshId:!1}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <UiComponents::AppToaster/>\n          <UiComponents::AccountActivation>\n            Sample page content\n          </UiComponents::AccountActivation>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        mockCurrentUser: mockCurrentUser(args.hasActiveFreshId)\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    hasActiveFreshId: {\n      type: 'boolean',\n      description: 'Indicates if the current user has an active Fresh ID. (This data is internally computed by the component from currentUser service)'\n    }\n  },\n  args: {\n    hasActiveFreshId: false\n  }\n}",...Default.parameters?.docs?.source}}}}}]);