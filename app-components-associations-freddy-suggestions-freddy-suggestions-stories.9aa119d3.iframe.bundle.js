"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4940],{"./app/components/app-components/associations/freddy-suggestions/freddy-suggestions.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FreddySuggestions:()=>FreddySuggestions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const context=Ember.getOwner(this),store=context.lookup("service:store"),currentAccount=context.lookup("service:current-account"),currentUser=context.lookup("service:current-user"),workspace=context.lookup("service:workspaces"),model=store.createRecord("ticket",{id:22,subject:"Test Subject",human_display_id:"INC-22"});this.set("model",model),Ember.setProperties(currentAccount,{hasFreddyConfig:()=>!0,hasTempFeature:()=>!0,hasFeature:()=>!0}),Ember.setProperties(currentUser,{hasScopedAbilities:()=>!0}),Object.defineProperty(workspace,"getWorkspaceObjectById",{get:()=>()=>({id:30,name:"Sample IT workspace",template_type:"IT"})})})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/associations/freddy-suggestions",component:"AppComponents::Associations::FreddySuggestions"},FreddySuggestions={render:args=>({template:Ember.HTMLBars.template({id:"dyf0giZZ",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@moduleName","@model","@linkAssociateItem","@associationConfig","@processedItemsMap","@clearProcessedItemsMap"],[[30,0,["moduleName"]],[30,0,["model"]],[99,2,["@linkAssociateItem"]],[30,0,["associationConfig"]],[30,0,["processedItemsMap"]],[99,3,["@clearProcessedItemsMap"]]]],null],[1,"\\n"]],[]],null],[1,"        "]],[],false,["if","app-components/associations/freddy-suggestions","linkAssociateItem","clearProcessedItemsMap"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,createStoreMock:createStoreMock()}}),name:"freddy-suggestions",argTypes:{model:{type:{name:"object",required:!0},control:{disable:!0},description:"Model (TCPR) instance for Freddy Suggestions"},moduleName:{type:{name:"string",required:!0},description:"Freddy suggestions are enabled for this module (ticket)."},linkAssociateItem:{description:"Parent Action to be triggered when entity is associated",type:{name:"method"}},associationConfig:{type:{name:"array",required:!0},control:{disable:!0},description:"Configuration for Associated Cards (TCPR Modules)"},processedItemsMap:{type:{name:"object"},description:"Add/Update processedItemsMap when entity is associated or de-associated"},clearProcessedItemsMap:{description:"Action triggered to clear the associated/de-associated properties from the processedItemsMap",type:{name:"method"}}},args:{moduleName:"ticket",processedItemsMap:{},associationConfig:[{cardTitle:"fs.common.modules.associations.change_initiating_ticket",cardTitleMultiple:"fs.common.modules.associations.changes_initiating_ticket",createConfig:{body:{change_type:"change_cause"}},eventType:"changeAssociated",modalTitle:"Associate a change",moduleName:"ticket",subModuleName:"change",subModuleType:"change_cause"}]}},__namedExportsOrder=["FreddySuggestions"];FreddySuggestions.parameters={...FreddySuggestions.parameters,docs:{...FreddySuggestions.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded}}\n          <AppComponents::Associations::FreddySuggestions\n            @moduleName={{this.moduleName}}\n            @model={{this.model}}\n            @linkAssociateItem={{linkAssociateItem}}\n            @associationConfig={{this.associationConfig}}\n            @processedItemsMap={{this.processedItemsMap}}\n            @clearProcessedItemsMap={{clearProcessedItemsMap}}\n          />\n        {{/if}}\n        `,\n      context: {\n        ...args,\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: "freddy-suggestions",\n  argTypes: {\n    model: {\n      type: {\n        name: "object",\n        required: true\n      },\n      control: {\n        disable: true\n      },\n      description: "Model (TCPR) instance for Freddy Suggestions"\n    },\n    moduleName: {\n      type: {\n        name: "string",\n        required: true\n      },\n      description: "Freddy suggestions are enabled for this module (ticket)."\n    },\n    linkAssociateItem: {\n      description: "Parent Action to be triggered when entity is associated",\n      type: {\n        name: "method"\n      }\n    },\n    associationConfig: {\n      type: {\n        name: "array",\n        required: true\n      },\n      control: {\n        disable: true\n      },\n      description: "Configuration for Associated Cards (TCPR Modules)"\n    },\n    processedItemsMap: {\n      type: {\n        name: "object"\n      },\n      description: "Add/Update processedItemsMap when entity is associated or de-associated"\n    },\n    clearProcessedItemsMap: {\n      description: "Action triggered to clear the associated/de-associated properties from the processedItemsMap",\n      type: {\n        name: "method"\n      }\n    }\n  },\n  args: {\n    moduleName: "ticket",\n    processedItemsMap: {},\n    associationConfig: [{\n      cardTitle: "fs.common.modules.associations.change_initiating_ticket",\n      cardTitleMultiple: "fs.common.modules.associations.changes_initiating_ticket",\n      createConfig: {\n        body: {\n          change_type: "change_cause"\n        }\n      },\n      eventType: "changeAssociated",\n      modalTitle: "Associate a change",\n      moduleName: "ticket",\n      subModuleName: "change",\n      subModuleType: "change_cause"\n    }]\n  }\n}',...FreddySuggestions.parameters?.docs?.source}}}}}]);