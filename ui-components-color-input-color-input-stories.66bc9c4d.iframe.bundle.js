"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[3362],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/color-input/color-input.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/color-input",component:"UiComponentsColorInput",parameters:{docs:{description:{component:"The ColorInput component is a customizable color picker input that allows users to select and input color values. It supports transparency detection and updates its value based on user interaction."}}}},initOnChange=()=>Ember.on("init",(async function(){Ember.setProperties(this,{onChange:arg=>Ember.setProperties(this,{value:arg.currentTarget.value})})})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"30TQEPUM",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[10,0],[14,5,"width: 300px;"],[14,0,"portal-designer"],[12],[1,"\\n            "],[8,[39,1],null,[["@value","@labelText","@onInput","@onChange","@isSection"],[[30,0,["value"]],[30,0,["labelText"]],[30,0,["onInput"]],[30,0,["onChange"]],[30,0,["isSection"]]]],null],[1,"\\n          "],[13],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/color-input"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),initOnChange:initOnChange()}}),name:"Default",argTypes:{value:{type:"string",description:"The current color value of the input."},labelText:{type:"string",description:"The label text for the color input."},onInput:{type:"function",description:"Callback function triggered on input event."},onChange:{type:"function",description:"Callback function triggered on change event."},isSection:{type:"boolean",description:"Determines if the input is part of a section, affecting its styling."}},args:{value:"#000000",labelText:"Select Color",onInput:newColor=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onInput event triggered")(newColor)},isSection:!0}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <div style=\"width: 300px;\" class=\"portal-designer\">\n            <UiComponents::ColorInput\n              @value={{this.value}}\n              @labelText={{this.labelText}}\n              @onInput={{this.onInput}}\n              @onChange={{this.onChange}}\n              @isSection={{this.isSection}}\n            />\n          </div>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        initOnChange: initOnChange()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    value: {\n      type: 'string',\n      description: 'The current color value of the input.'\n    },\n    labelText: {\n      type: 'string',\n      description: 'The label text for the color input.'\n    },\n    onInput: {\n      type: 'function',\n      description: 'Callback function triggered on input event.'\n    },\n    onChange: {\n      type: 'function',\n      description: 'Callback function triggered on change event.'\n    },\n    isSection: {\n      type: 'boolean',\n      description: 'Determines if the input is part of a section, affecting its styling.'\n    }\n  },\n  args: {\n    value: '#000000',\n    labelText: 'Select Color',\n    onInput: newColor => {\n      action('onInput event triggered')(newColor);\n    },\n    isSection: true\n  }\n}",...Default.parameters?.docs?.source}}}}}]);