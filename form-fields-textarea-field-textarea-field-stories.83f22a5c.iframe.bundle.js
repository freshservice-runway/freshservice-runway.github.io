"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[7261],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/form-fields/textarea-field/textarea-field.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,RichText:()=>RichText,__namedExportsOrder:()=>__namedExportsOrder,default:()=>textarea_field_stories});var dist=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const PALETTE_COLORS=["#61BD6D","#1ABC9C","#54ACD2","#2C82C9","#9365B8","#475577","#00A885","#3D8EB9","#2969B0","#553982","#28324E","#000000","#F7DA64","#FBA026","#EB6B56","#E25041","#A38F84","#FFFFFF","#FAC51C","#F37934","#B8312F","#7C706B","#D1D5D8","REMOVE"],createStoreMock=()=>Ember.on("init",(async function(){Ember.getOwner(this).lookup("service:current-account").accountData.temp_features.itom_rich_text_dark_theme=!0})),textarea_field_stories={title:"form-fields/textarea-field",component:"FormFieldsTextareaField"},Default={render:args=>({template:Ember.HTMLBars.template({id:"aYO1gt09",block:'[[[1,"\\n                "],[8,[39,0],null,[["@propertyName","@object","@placeholder","@inputClasses","@required","@disabled","@labelClasses","@update","@onEditorInsert","@fieldOptions"],[[99,1,["@propertyName"]],[99,2,["@object"]],[99,3,["@placeholder"]],[99,4,["@inputClasses"]],[99,5,["@required"]],[99,6,["@disabled"]],[99,7,["@labelClasses"]],[28,[37,8],[[33,9]],null],[28,[37,8],[[33,10]],null],[99,11,["@fieldOptions"]]]],null],[1,"\\n                "]],[],false,["form-fields/textarea-field","propertyName","object","placeholder","inputClasses","required","disabled","labelClasses","fn","update","onEditorInsert","fieldOptions"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args}}),name:"Default",argTypes:{propertyName:{description:"The name of the property which is to be associated to the text area",control:{disable:!0}},object:{description:"Model object",control:{disable:!0}},placeholder:{description:"Placeholder text"},inputClasses:{description:"Adds specified classes to the textarea input"},required:{description:"Sets whether the input is mandatory or not"},disabled:{description:"Sets whether the input is disabled or not"},labelClasses:{description:"Adds specified classes to the label"},update:{description:"Update callback for textarea",control:{disable:!0}},fieldOptions:{description:"Field options to be passed to the text area. 'customType' attribute inside fieldOptions is used to enable special textarea fields such as currency field. Froala editor also uses this attribute for configuration (For supported froala configs, please refer https://froala.com/wysiwyg-editor/docs/api/ )",control:{disable:!0}},onEditorInsert:{description:"Editor insert callback for froala",control:{disable:!0}}},args:{propertyName:"Description",placeholder:"Please type here",inputClasses:"field-action-inputs",labelClasses:"label",required:!1,disabled:!1,update:()=>(0,dist.XI)("onUpdate")(),onEditorInsert:()=>(0,dist.XI)("onEditorInsert")(),fieldOptions:{},object:{}}},RichText={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"6wHMrmHp",block:'[[[1,"\\n                    "],[10,0],[15,0,[29,["textfield-wrapper ",[52,[30,0,["fieldOptions","richText"]],"froala-editor"]]]],[12],[1,"\\n                        "],[8,[39,1],null,[["@propertyName","@object","@update","@onEditorInsert","@fieldOptions"],["Description","{}",[28,[37,2],[[33,3]],null],[28,[37,2],[[33,4]],null],[99,5,["@fieldOptions"]]]],null],[1,"\\n                    "],[13],[1,"\\n                "]],[],false,["if","form-fields/textarea-field","fn","update","onEditorInsert","fieldOptions"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),createStoreMock:createStoreMock()}}),name:"Rich Text",args:{fieldOptions:{fieldOptions:{events:{blur:function(){},focus:function(){}},editorClass:"solutions_text froala-editor-container",placeholderText:"Please type here",richText:!0,attribution:!1,imageUploadURL:"/api/_/solutions/inline_images",imageDefaultWidth:"auto",requestWithCredentials:!0,requestHeaders:{},quickInsertEnabled:!1,charCounterCount:!1,colorsStep:6,colorsBackground:PALETTE_COLORS,colorsText:PALETTE_COLORS,colorsHEXInput:!1,videoUpload:!1,showShortcutToolbar:!1,paragraphFormat:{N:"Normal",H1:"Heading 1",H2:"Heading 2",H3:"Heading 3",H4:"Heading 4",BLOCKQUOTE:"Quote"},linkList:[],linkInsertButtons:["linkBack"],imageInsertButtons:["imageUpload","imageByURL"],linkEditButtons:["linkOpen","linkEdit","linkRemove"],imageEditButtons:["imageRemove","imageSize","imageCaption","imageLink","linkOpen","linkEdit","linkRemove","imageAlt"],videoEditButtons:["videoRemove","videoAlign","videoSize"],height:400,pasteDeniedAttrs:["class","id"],lineBreakerTags:["table","hr","form","dl","span.fr-video","pre"],imageMove:!1,imageDefaultAlign:"left",focusOnMarker:!0,pasteDeniedStyleProps:["background","background-color","margin-top","margin-right","word-spacing","float","outline","font-style","vertical-align","text-rendering","font-variant","letter-spacing","orphans","text-transform","white-space","widows","-webkit-text-stroke-width","display","position","overflow","text-overflow","text-decoration","font-variant-ligatures","font-variant-caps"],htmlRemoveTags:["script","style","base"],htmlAllowedTags:["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","br","button","canvas","caption","cite","code","col","colgroup","datalist","dd","del","details","dfn","dialog","div","dl","dt","em","embed","font","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","hr","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","menuitem","meter","nav","noscript","object","ol","optgroup","option","output","p","param","pre","progress","queue","rp","rt","ruby","s","samp","script","style","section","select","small","source","span","strike","strong","sub","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","title","tr","track","u","ul","var","video","wbr"],htmlAllowedAttrs:["accept","accept-charset","accesskey","action","align","allowfullscreen","allowtransparency","alt","async","autocomplete","autofocus","autoplay","autosave","background","bgcolor","border","charset","cellpadding","cellspacing","checked","cite","class","color","cols","colspan","content","contenteditable","contextmenu","controls","coords","data-.*","datetime","default","defer","dir","dirname","disabled","download","draggable","dropzone","enctype","for","form","formaction","frameborder","headers","height","hidden","high","href","hreflang","http-equiv","icon","id","ismap","itemprop","keytype","kind","label","lang","language","list","loop","low","max","maxlength","media","method","min","mozallowfullscreen","multiple","muted","name","novalidate","open","optimum","pattern","ping","placeholder","playsinline","poster","preload","pubdate","radiogroup","readonly","rel","required","reversed","rows","rowspan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","src","srcdoc","srclang","srcset","start","step","summary","spellcheck","style","tabindex","target","title","type","translate","usemap","value","valign","webkitallowfullscreen","width","wrap","code-brush","face"],tabSpaces:4,tableInsertHelper:!1,codeViewKeepActiveButtons:["fullscreen"],pasteAllowedStyleProps:[".*"],pasteDeniedTags:["meta"],wordPasteTableFullWidth:!1,wordPasteModal:!1,fontFamily:{"'Andale Mono', AndaleMono, monospace":"Andale Mono","Arial,Helvetica,sans-serif":"Arial","'Arial Black',Gadget,sans-serif":"Arial Black","'Book Antiqua', Georgia, serif":"Book Antiqua","'Comic Sans MS', cursive, sans-serif":"Comic Sans MS","'Courier New', Courier, monospace":"Courier New","Georgia,serif":"Georgia","Helvetica,sans-serif":"Helvetica","Helvetica Neue":"Helvetica Neue","Impact,Charcoal,sans-serif":"Impact",Symbol:"Symbol","Tahoma,Geneva,sans-serif":"Tahoma","'Trebuchet MS', Helvetica, sans-serif":"Trebuchet MS","'Times New Roman',Times,serif":"Times New Roman","Terminal, monospace":"Terminal","Verdana,Geneva,sans-serif":"Verdana",Windings:"Windings",Webdings:"Webdings"},toolbarButtons:["paragraphFormat","fontFamily","fontSize","textColor","backgroundColor","color","bold","strikeThrough","italic","underline","align","formatOL","formatUL","outdent","indent","insertLink","insertTable","insertImage","insertVideo","insertHR","clearFormatting","codeInsert","html"]}}.fieldOptions,update:()=>(0,dist.XI)("onUpdate")(),onEditorInsert:()=>(0,dist.XI)("onEditorInsert")()}},__namedExportsOrder=["Default","RichText"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <FormFields::TextareaField\n                    @propertyName = {{propertyName}}\n                    @object = {{object}}\n                    @placeholder = {{placeholder}}\n                    @inputClasses = {{inputClasses}}\n                    @required = {{required}}\n                    @disabled = {{disabled}}\n                    @labelClasses\t= {{labelClasses}}\n                    @update = {{fn update}}\n                    @onEditorInsert = {{fn onEditorInsert}}\n                    @fieldOptions = {{fieldOptions}}/>\n                `,\n      context: {\n        ...args\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: ARG_TYPES,\n  args: ARGS\n}",...Default.parameters?.docs?.source}}},RichText.parameters={...RichText.parameters,docs:{...RichText.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                    <div class='textfield-wrapper {{if this.fieldOptions.richText 'froala-editor'}}'>\n                        <FormFields::TextareaField\n                            @propertyName   = 'Description'\n                            @object         = {}\n                            @update         = {{fn update}}\n                            @onEditorInsert = {{fn onEditorInsert}}\n                            @fieldOptions   = {{fieldOptions}}/>\n                    </div>\n                `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: 'Rich Text',\n  args: {\n    fieldOptions: FROALA_TOOLBAR_OPTIONS.fieldOptions,\n    update: () => action('onUpdate')(),\n    onEditorInsert: () => action('onEditorInsert')()\n  }\n}",...RichText.parameters?.docs?.source}}}}}]);