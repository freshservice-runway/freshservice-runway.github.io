"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[479],{"./app/components/app-components/tcpr-common/summary-details/change/change.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const store=Ember.getOwner(this).lookup("service:store");store.createRecord("service",{id:1,name:"Service1"}),store.createRecord("service",{id:2,name:"Service2"});const model=store.createRecord("change",{id:4,subject:"Test Subject",priorityName:"Low",priority:1,status:1,statusNameText:"Open",workspaceId:30,humanDisplayId:"CHN-4"});this.set("model",model)})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/tcpr-common/summary-details/change",component:"AppComponentsTcprCommonSummaryDetailsChange"},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"ZcEfKByF",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"                    "],[8,[39,1],null,[["@model","@options","@setLoading"],[[30,0,["model"]],[99,2,["@options"]],[99,3,["@setLoading"]]]],null],[1,"\\n"]],[]],null],[1,"                "]],[],false,["if","app-components/tcpr-common/summary-details/change","options","setLoading"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),createStoreMock:createStoreMock()}}),name:"Default",argTypes:{model:{type:{name:"object",required:!0},description:"Change Model"},options:{type:{name:"object",required:!0},control:{disable:!0},description:"Configuration for having form fields"},setLoading:{type:{name:"function"},description:"Will call the function whenever loading happens"}},args:{options:{formFields:[{name:"status",label:"Status"},{name:"priority",label:"Priority"},{name:"agent",label:"Agent"},{name:"change_type",label:"Change Type"},{name:"impact",label:"Impact"},{name:"risk",label:"Risk"}]},setLoading:()=>{}}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                {{#if this.translationsLoaded}}\n                    <AppComponents::TcprCommon::SummaryDetails::Change\n                        @model={{this.model}}\n                        @options={{options}}\n                        @setLoading={{setLoading}}\n                    />\n                {{/if}}\n                `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: "Default",\n  argTypes: {\n    model: {\n      type: {\n        name: "object",\n        required: true\n      },\n      description: "Change Model"\n    },\n    options: {\n      type: {\n        name: "object",\n        required: true\n      },\n      control: {\n        disable: true\n      },\n      description: "Configuration for having form fields"\n    },\n    setLoading: {\n      type: {\n        name: "function"\n      },\n      description: "Will call the function whenever loading happens"\n    }\n  },\n  args: {\n    options: {\n      formFields: [{\n        name: "status",\n        label: "Status"\n      }, {\n        name: "priority",\n        label: "Priority"\n      }, {\n        name: "agent",\n        label: "Agent"\n      }, {\n        name: "change_type",\n        label: "Change Type"\n      }, {\n        name: "impact",\n        label: "Impact"\n      }, {\n        name: "risk",\n        label: "Risk"\n      }]\n    },\n    setLoading: () => {}\n  }\n}',...Default.parameters?.docs?.source}}}}}]);