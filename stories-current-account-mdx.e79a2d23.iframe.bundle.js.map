{"version":3,"file":"stories-current-account-mdx.e79a2d23.iframe.bundle.js","mappings":";;AAuCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwHA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAuBA;;;;;;;;AAaA;;AAuBA;;;;;;;;;;;AAgBA;;AAeA;;AAOA;;AAWA;;;;;;;;;;AAeA;;AA2BA;;AAOA;;AAmBA;;AAOA;;AAeA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;AAOA;;AAWA;;;;;AAaA","sources":["webpack://freshservice/./app/services/stories/current-account.mdx"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/runner/_work/itildesk/itildesk/frontend/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Source} from '@storybook/blocks';\nimport dedent from 'ts-dedent';\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"This is an example of services documentation\"\n      })\n    }), \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Services/current-account\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Current account Service is used as a singleton entity which stores the account related details\"\n    }), \"\\n\", _jsx(\"div\", {\n      className: \"subheading\",\n      children: \"Apis\"\n    }), \"\\n\", _jsxs(\"ol\", {\n      class: \"api-list\",\n      children: [_jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"accountData\"\n        }), \" - provides the current account data\"]\n      }), _jsx(\"br\", {}), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.accountData\n  `\n      }), _jsx(Source, {\n        language: \"json\",\n        light: true,\n        format: false,\n        code: dedent`\n  {\n    \"id\": 1,\n    \"full_domain\": \"localhost.freshservice-dev.com\",\n    \"helpdesk_name\": \"Test Account\",\n    \"name\": \"Test Account\",\n    \"time_zone\": \"Chennai\",\n    \"language\": \"en\",\n    \"product\": \"freshservice\",\n    \"date_format\": 1,\n    \"time_format\": \"12h\",\n    \"currency_symbol\": \"$\",\n    \"supported_languages\": \"[]\",\n    \"custom_translations\": {\n        \"module_names\": \"module_names_appear_here\"\n    },\n    \"sandbox_account\": false,\n    \"marketplace\": {\n        \"mkp_api_key\": \"dummy_key\",\n        \"mkp_region\": \"dev\",\n        \"pod\": \"poduseast1\",\n        \"tenant_id\": 3,\n        \"is_freshplugs_available\": false,\n        \"marketplace_encrypted_param\": \"dummy_param\",\n        \"auth_token\": \"dummy_token\",\n        \"global_data\": {\n            \"logged_in\": {\n                \"agent\": {\n                    \"id\": 1,\n                    \"user_id\": 1,\n                    \"signature\": null,\n                    \"created_at\": \"2022-06-30T13:19:22+05:30\",\n                    \"updated_at\": \"2022-07-05T10:59:31+05:30\",\n                    \"ticket_permission\": 1,\n                    \"occasional\": false,\n                    \"google_viewer_id\": null,\n                    \"signature_html\": \"<p><br></p>\",\n                    \"points\": null,\n                    \"scoreboard_level_id\": null,\n                    \"available\": true,\n                    \"active_since\": null,\n                    \"scopes\": 152137,\n                    \"user\": {\n                        \"id\": 1,\n                        \"name\": \"Support cv\",\n                        \"email\": \"sample@freshservice.com\",\n                        \"created_at\": \"2022-06-30T13:19:22+05:30\",\n                        \"updated_at\": \"2022-07-14T12:52:26+05:30\",\n                        \"active\": true,\n                        \"job_title\": null,\n                        \"phone\": null,\n                        \"mobile\": null,\n                        \"description\": null,\n                        \"time_zone\": \"Chennai\",\n                        \"deleted\": false,\n                        \"language\": \"en\",\n                        \"address\": null,\n                        \"external_id\": null,\n                        \"helpdesk_agent\": true,\n                        \"location_name\": null,\n                        \"time_format\": \"12h\",\n                        \"vip_user\": false,\n                        \"department_names\": \"[]\"\n                    },\n                    \"group_ids\": \"[]\"\n                }\n            },\n            \"domain\": {\n                \"domainName\": \"localhost.freshservice-dev.com\",\n                \"hostName\": \"localhost.freshservice-dev.com\",\n                \"cname\": null\n            }\n        }\n    },\n    \"projects_under_migration\": false,\n    \"public_url_restricted\": false,\n    \"collaboration_enabled\": false,\n    \"is_tfs_enabled\": false,\n    \"is_freshid_v2_account\": false,\n    \"email_fonts\": {\n        \"font-size\": \"14px\",\n        \"font-family\": \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif\"\n    },\n    \"portal\": {\n        \"id\": 1,\n        \"name\": \"Test Account\",\n        \"host\": \"localhost.freshservice-dev.com\",\n        \"default\": true,\n        \"ssl_enabled\": true,\n        \"preferences\": {\n            \"bg_color\": \"#ebeef0\",\n            \"header_color\": \"#ffffff\",\n            \"tab_color\": \"#12344D\"\n        },\n        \"helpdesk_logo\": null,\n        \"fav_icon_url\": \"http://localhost.freshservice-dev.com:3000/assets/logos/misc/favicon.ico\"\n    },\n    \"subscription\": {\n        \"state\": \"trial\",\n        \"subscription_plan\": \"Enterprise\",\n        \"non_asset_plan\": false,\n        \"trial_days\": 7,\n        \"account_in_trail\": true,\n        \"trial_expired\": false,\n        \"default_trail_notifier_days\": 30,\n        \"subscription_url\": \"/subscription\"\n    },\n    \"installed_apps\": {},\n    \"force_authn_for_public_url\": false,\n    \"features\": \"[features list]\",\n    \"temp_features\": {\n        \"formserv_sc\": true,\n        \"onboarding_kits\": true\n    }\n  }\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"accountDateFormat\"\n        }), \" - provides the selected account date format\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.accountDateFormat\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    'DD MMM, YYYY'\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"hasFeature\"\n        }), \" - checks if a feature is present\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.hasFeature('advanced_reporting')\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    true\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"hasAnyFeature\"\n        }), \" - checks if any feature in list is present\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.hasAnyFeature('saas_app_management', 'saas_app_management_trial')\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    true\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"hasAllFeatures\"\n        }), \" - checks if all features in list are present\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.hasAllFeatures('saas_app_management', 'saas_app_management_trial')\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"hasTempFeature\"\n        }), \" - checks if a temp feature is present\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.hasTempFeature('ams_additional_info')\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"getCsrfToken\"\n        }), \" - fetches the csrf token\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.getCsrfToken()\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    'hQ0PfRLxqI8X+RZiIhMHVc29n0boi5WEOuskMEMrlJ7mS5eOGyA9GrnipOh4r/GwWFUOjpKAu4a0pITNtLJzDw=='\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"language\"\n        }), \" - returns selected language (eg: 'en')\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"portalName\"\n        }), \" - returns the name of the account (eg: 'Test Account')\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"productName\"\n        }), \" - returns the name of the product being used (eg: 'freshservice')\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"installedApps\"\n        }), \" - return details of marketplace apps installed in the account\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.installedApps\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    {\n      \"dropbox\": \"qwerty12345\",\n      \"box\": null,\n      \"service_bot_slack\": {\n          \"channel_id\": 12345678910\n      }\n    }\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"dateFormat\"\n        }), \" - returns the account's date format in numeric value among 1 => :non_us, 2 => :us, 3 => :japan (eg. 1)\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"timeFormat\"\n        }), \" - returns the account's time format in string form (eg: \\\"12h\\\" or \\\"24h\\\")\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"id\"\n        }), \" - returns the account_id\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"subscription\"\n        }), \" - provides the subscription type object\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.subscription\n  `\n      }), _jsx(Source, {\n        language: \"json\",\n        light: true,\n        format: false,\n        code: dedent`\n    {\n      \"state\": \"trial\",\n      \"subscription_plan\": \"Enterprise\",\n      \"non_asset_plan\": false,\n      \"trial_days\": 13,\n      \"account_in_trail\": true,\n      \"trial_expired\": false,\n      \"default_trail_notifier_days\": 30,\n      \"subscription_url\": \"/subscription\"\n    }\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"currencySymbol\"\n        }), \" - returns the currency symbol (eg: \\\"$\\\")\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"secondaryLanguages\"\n        }), \" - provides the array of account supported languages\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.secondaryLanguages\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    [\"en\", \"tr\"]\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"customTranslations\"\n        }), \" - provides custom translations for account as a object\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.customTranslations\n  `\n      }), _jsx(Source, {\n        language: \"json\",\n        light: true,\n        format: false,\n        code: dedent`\n    {\n      \"module_names\": {\n        \"ticket\": \"ticket\",\n        \"tickets\": \"tickets\",\n        \"Ticket\": \"Ticket\",\n        \"Tickets\": \"Tickets\"\n        ...\n      }\n    }\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"mkp_api_key\"\n        }), \" - returns the marketplace api key\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"mkp_region\"\n        }), \" - returns the marketplace region (eg. \\\"staging\\\")\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"full_domain\"\n        }), \" - returns account's full domain (eg. \\\"dharanikumar.freshcmdb.com\\\"\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"encryptedParam\"\n        }), \" - returns marketplace parameters in encrypted hash\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"showFreshplugs\"\n        }), \" - checks if the account has integrated freshplug plugins\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.showFreshplugs\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"pod\"\n        }), \" - returns the pod name (eg. \\\"poduseast1\\\")\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"tenant_id\"\n        }), \" - returns the marketplace tenant id (eg. 3)\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"projectsUnderMigration\"\n        }), \" - checks if the project is under migration by verifying the migration flag\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.projectsUnderMigration\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"auth_token\"\n        }), \" - returns marketplace authentication token\"]\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"publicUrlRestricted\"\n        }), \" - checks if public url restricted for the current account\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.publicUrlRestricted\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"forceAuthnForPublicUrl\"\n        }), \" - checks if authentication is required for public URL\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.forceAuthnForPublicUrl\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"collaborationEnabled\"\n        }), \" - checks if collaboration feature is enabled for current account\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.collaborationEnabled\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"isFreshidV2Account\"\n        }), \" - checks if its the freshID v2 account\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.isFreshidV2Account\n  `\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n    false\n  `\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"EmailFontSettings\"\n        }), \" - provides the email's font setting object\"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n    this.currentAccount.EmailFontSettings\n  `\n      }), _jsx(Source, {\n        language: \"json\",\n        light: true,\n        format: false,\n        code: dedent`\n    {\n      \"font-size\": \"14px\",\n      \"font-family\": \"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif\"\n    }\n  `\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n"],"names":[],"sourceRoot":""}