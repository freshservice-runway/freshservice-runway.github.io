"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[734],{"./app/components/ui-components/scroll-to-view/scroll-to-view.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ScrollToView:()=>ScrollToView,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/scroll-to-view",component:"UiComponents::ScrollToView"},ScrollToView={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"m8z0KOXq",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"\\t\\t\\t\\t\\t"],[10,0],[14,1,"element-to-scroll"],[12],[1,"\\n\\t\\t\\t\\t\\t\\t\\t"],[10,0],[12],[1,"Start Content"],[13],[1,"\\n\\t\\t\\t\\t\\t\\t\\t"],[10,0],[14,5,"margin-top:3000px"],[12],[1,"End Content"],[13],[1,"\\n\\t\\t\\t\\t\\t\\t\\t"],[8,[39,1],[[4,[38,2],null,null]],[["@selector"],[""]],null],[1,"\\n\\t\\t\\t\\t\\t"],[13],[1,"\\n"]],[]],null]],[],false,["if","ui-components/scroll-to-view","selector"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"scroll-to-view",argTypes:{selector:{type:{name:"string"},control:{disable:!0},description:"Selector to get the element to inject scroll-to-view component. If not given will take HTML as scrollable element"}},args:{selector:"#element-to-scroll"}},__namedExportsOrder=["ScrollToView"];ScrollToView.parameters={...ScrollToView.parameters,docs:{...ScrollToView.parameters?.docs,source:{originalSource:'{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                {{#if this.translationsLoaded}}\n                    <div id="element-to-scroll">\n                            <div>Start Content</div>\n                            <div style="margin-top:3000px">End Content</div>\n                            <UiComponents::ScrollToView\n                            @selector{{selector}}\n                            />\n                    </div>\n                {{/if}}`,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: "scroll-to-view",\n  argTypes: {\n    selector: {\n      type: {\n        name: "string"\n      },\n      control: {\n        disable: true\n      },\n      description: "Selector to get the element to inject scroll-to-view component. If not given will take HTML as scrollable element"\n    }\n  },\n  args: {\n    selector: \'#element-to-scroll\'\n  }\n}',...ScrollToView.parameters?.docs?.source}}}}}]);