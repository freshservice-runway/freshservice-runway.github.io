"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[7672],{"./app/components/ui-components/long-breadcrumbs/breadcrumb-item/breadcrumb-item.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/long-breadcrumbs/breadcrumb-item",component:"UiComponentLongBreadcrumbItem"},Default={render:args=>({template:Ember.HTMLBars.template({id:"95qw2Jp9",block:'[[[1,"\\n            "],[8,[39,0],null,[["@breadcrumb"],[[30,0,["breadcrumb"]]]],null],[1,"\\n            "]],[],false,["ui-components/long-breadcrumbs/breadcrumb-item"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args}}),name:"Default",argTypes:{breadcrumb:{type:{name:"object"},description:"Breadcrumb object containing title and testId."}},args:{breadcrumb:{title:"Tickets",testId:"tickets-list"}}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n            <UiComponents::LongBreadcrumbs::BreadcrumbItem\n                @breadcrumb={{this.breadcrumb}}/>\n            `,\n      context: {\n        ...args\n      }\n    };\n  },\n  name: \"Default\",\n  argTypes: {\n    breadcrumb: {\n      type: {\n        name: \"object\"\n      },\n      description: 'Breadcrumb object containing title and testId.'\n    }\n  },\n  args: {\n    breadcrumb: {\n      title: 'Tickets',\n      testId: 'tickets-list'\n    }\n  }\n}",...Default.parameters?.docs?.source},description:{story:'Storybook story for the UiComponents::LongBreadcrumbs::BreadcrumbItem component.\n\n@component\n@name Default\n@description Renders a breadcrumb item with customizable breadcrumb data.\n\n@arg {Object} breadcrumb - Breadcrumb object containing title, testId, and optional navigation properties.\n@arg {string} breadcrumb.title - The display title of the breadcrumb.\n@arg {string} breadcrumb.testId - The test identifier for the breadcrumb.\n@arg {Object} [breadcrumb.linkToPjax] - (Optional) Navigation object for PJAX transitions.\n@arg {Object} breadcrumb.linkToPjax.transitionTo - Transition details for PJAX navigation.\n@arg {string} breadcrumb.linkToPjax.transitionTo.name - The route name for PJAX transition.\n@arg {Object} [breadcrumb.linkTo] - (Optional) Navigation object for standard Ember link-to.\n@arg {string} breadcrumb.linkTo.route - The route name for Ember\'s link-to helper.\n@arg {Array} breadcrumb.linkTo.models - The model(s) to pass to the route.\n\n@example <caption>With linkToPjax</caption>\n{\n  title: this.intl.t("fs.collaborate.title"),\n  testId: \'collaborate-title\',\n  linkToPjax: {\n    transitionTo: {\n      name: "admin.collaborate",\n    },\n  },\n}\n\n@example <caption>With link-to</caption>\n{\n  title: this.intl.t("fs.ams.admin.alert_integration.title"),\n  testId: this.intl.t("fs.ams.admin.alert_integration.title"),\n  linkTo: {\n    route: "admin.itom.alert-integrations",\n    models: []\n  },\n}',...Default.parameters?.docs?.description}}}}}]);