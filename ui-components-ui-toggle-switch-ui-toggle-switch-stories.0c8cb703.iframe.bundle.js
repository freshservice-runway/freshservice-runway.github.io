"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[9148],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/ui-toggle-switch/ui-toggle-switch.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/ui-toggle-switch",component:"UiComponentsUiToggleSwitch",parameters:{docs:{description:{component:"The UiToggleSwitch component is a customizable toggle switch used to represent a boolean state. It supports various properties such as value, disabled state, and custom classes, and provides callback actions for change events."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"ejxp+qCE",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@class","@value","@onchange","@dataTestId","@disabled","@id","@label","@valuePath","@checkboxClass","@hintText","@testId"],[[30,0,["class"]],[30,0,["value"]],[30,0,["onchange"]],[30,0,["dataTestId"]],[30,0,["disabled"]],[30,0,["id"]],[30,0,["label"]],[30,0,["valuePath"]],[30,0,["checkboxClass"]],[30,0,["hintText"]],[30,0,["testId"]]]],null],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/ui-toggle-switch"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{class:{type:"string",description:"Custom CSS class for the toggle switch container."},value:{type:"boolean",description:"The current value of the toggle switch."},onchange:{type:"function",description:"Callback function triggered when the toggle switch value changes."},dataTestId:{type:"string",description:"Data test ID for the toggle switch."},disabled:{type:"boolean",description:"Disables the toggle switch if set to true."},id:{type:"string",description:"ID for the toggle switch element."},label:{type:"string",description:"Aria label for the toggle switch."},valuePath:{type:"string",description:"Name attribute for the input element."},checkboxClass:{type:"string",description:"Custom CSS class for the checkbox input."},hintText:{type:"string",description:"Hint text for the toggle switch."},testId:{type:"string",description:"Test ID for the toggle switch."}},args:{class:"default-toggle-class",value:!1,onchange:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Toggle switch changed")(),dataTestId:"toggle-switch",disabled:!1,id:"toggle-switch-id",label:"Toggle Switch",valuePath:"toggle-switch-value",checkboxClass:"checkbox-class",hintText:"Toggle switch hint",testId:"toggle-switch-test-id"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <UiComponents::UiToggleSwitch\n            @class={{this.class}}\n            @value={{this.value}}\n            @onchange={{this.onchange}}\n            @dataTestId={{this.dataTestId}}\n            @disabled={{this.disabled}}\n            @id={{this.id}}\n            @label={{this.label}}\n            @valuePath={{this.valuePath}}\n            @checkboxClass={{this.checkboxClass}}\n            @hintText={{this.hintText}}\n            @testId={{this.testId}}\n          />\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    class: {\n      type: 'string',\n      description: 'Custom CSS class for the toggle switch container.'\n    },\n    value: {\n      type: 'boolean',\n      description: 'The current value of the toggle switch.'\n    },\n    onchange: {\n      type: 'function',\n      description: 'Callback function triggered when the toggle switch value changes.'\n    },\n    dataTestId: {\n      type: 'string',\n      description: 'Data test ID for the toggle switch.'\n    },\n    disabled: {\n      type: 'boolean',\n      description: 'Disables the toggle switch if set to true.'\n    },\n    id: {\n      type: 'string',\n      description: 'ID for the toggle switch element.'\n    },\n    label: {\n      type: 'string',\n      description: 'Aria label for the toggle switch.'\n    },\n    valuePath: {\n      type: 'string',\n      description: 'Name attribute for the input element.'\n    },\n    checkboxClass: {\n      type: 'string',\n      description: 'Custom CSS class for the checkbox input.'\n    },\n    hintText: {\n      type: 'string',\n      description: 'Hint text for the toggle switch.'\n    },\n    testId: {\n      type: 'string',\n      description: 'Test ID for the toggle switch.'\n    }\n  },\n  args: {\n    class: 'default-toggle-class',\n    value: false,\n    onchange: () => action('Toggle switch changed')(),\n    dataTestId: 'toggle-switch',\n    disabled: false,\n    id: 'toggle-switch-id',\n    label: 'Toggle Switch',\n    valuePath: 'toggle-switch-value',\n    checkboxClass: 'checkbox-class',\n    hintText: 'Toggle switch hint',\n    testId: 'toggle-switch-test-id'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);