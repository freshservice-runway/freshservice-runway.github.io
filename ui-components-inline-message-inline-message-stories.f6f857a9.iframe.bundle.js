"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6154],{"./app/components/ui-components/inline-message/inline-message.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/inline-message",component:"UiComponentsInlineMessage",parameters:{docs:{description:{component:"The Inline Message component is used to display brief messages with different types such as info, error, and warning. It supports custom icons and CSS classes for styling."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"8HwqAF+c",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@type","@icon","@cssClass","@iconClass"],[[30,0,["type"]],[30,0,["icon"]],[30,0,["cssClass"]],[30,0,["iconClass"]]]],[["default"],[[[[1,"\\n            Sample message content goes here.\\n          "]],[]]]]],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/inline-message"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{type:{type:"select",options:["","info","error","warning"],description:"The type of the message which determines the icon and styling."},icon:{type:"string",description:"Custom icon to be used for the message. Overrides the default icon based on type."},cssClass:{type:"string",description:"Additional CSS classes for custom styling of the message."},iconClass:{type:"string",description:"CSS class for the icon. Can be used to apply custom styles to the icon."}},args:{type:"info",icon:"",cssClass:"",iconClass:""}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <UiComponents::InlineMessage\n            @type={{this.type}}\n            @icon={{this.icon}}\n            @cssClass={{this.cssClass}}\n            @iconClass={{this.iconClass}}\n          >\n            Sample message content goes here.\n          </UiComponents::InlineMessage>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    type: {\n      type: 'select',\n      options: ['', 'info', 'error', 'warning'],\n      description: 'The type of the message which determines the icon and styling.'\n    },\n    icon: {\n      type: 'string',\n      description: 'Custom icon to be used for the message. Overrides the default icon based on type.'\n    },\n    cssClass: {\n      type: 'string',\n      description: 'Additional CSS classes for custom styling of the message.'\n    },\n    iconClass: {\n      type: 'string',\n      description: 'CSS class for the icon. Can be used to apply custom styles to the icon.'\n    }\n  },\n  args: {\n    type: 'info',\n    icon: '',\n    cssClass: '',\n    iconClass: ''\n  }\n}",...Default.parameters?.docs?.source}}}}}]);