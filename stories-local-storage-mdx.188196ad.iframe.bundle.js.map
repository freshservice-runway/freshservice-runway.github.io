{"version":3,"file":"stories-local-storage-mdx.188196ad.iframe.bundle.js","mappings":";;;;AA6BA;;;;AAaA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA","sources":["webpack://freshservice/./app/utils/stories/local-storage.mdx"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/runner/_work/itildesk/itildesk/frontend/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Source} from '@storybook/blocks';\nimport dedent from 'ts-dedent';\nfunction _createMdxContent(props) {\n  return _jsxs(_Fragment, {\n    children: [_jsx(Meta, {\n      title: \"Utils/local-storage\"\n    }), \"\\n\", _jsx(\"div\", {\n      className: \"subheading\",\n      children: \"Local Storage\"\n    }), \"\\n\", _jsxs(\"ol\", {\n      class: \"api-list\",\n      children: [_jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"setModuleDataInLS\"\n        }), \" - sets value in local storage under a module name\"]\n      }), _jsx(\"br\", {}), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n\timport { setModuleDataInLS } from 'freshservice/utils/common';\n \n\tsetModuleDataInLS(moduleName, key, value);\n`\n      }), _jsxs(\"li\", {\n        children: [_jsx(\"code\", {\n          children: \"getModuleDataFromLS\"\n        }), \" - gets a specific key value under a module name from local storage \"]\n      }), _jsx(Source, {\n        language: \"js\",\n        dark: true,\n        format: false,\n        code: dedent`\n\timport { getModuleDataFromLS } from 'freshservice/utils/common';\n \n\tgetModuleDataFromLS(moduleName, key, defaultValue);\n`\n      }), _jsx(Source, {\n        language: \"js\",\n        light: true,\n        format: false,\n        code: dedent`\n \n\t//sample invocation\n\tgetModuleDataFromLS(MODULE_CONFIG.tasksCacheKey, this.taskListTableHeaders , []) \n \n\t//sample output\n\t[\n\t\t{\n\t\t\t\"key\": \"human_display_id\",\n\t\t\t\"name\": \"display_id\",\n\t\t\t\"label\": \"Task Display Id\",\n\t\t\t\"position\": 1,\n\t\t\t\"fixed\": true,\n\t\t\t\"frozen\": true,\n\t\t\t\"selected\": true,\n\t\t\t\"nested\": null,\n\t\t\t\"date_only\": null,\n\t\t\t\"field_type\": null,\n\t\t\t\"id\": \"display_id\"\n\t\t},\n\t\t{\n\t\t\t\"key\": \"title\",\n\t\t\t\"name\": \"title\",\n\t\t\t\"label\": \"Title\",\n\t\t\t\"position\": 1,\n\t\t\t\"fixed\": true,\n\t\t\t\"frozen\": true,\n\t\t\t\"selected\": true,\n\t\t\t\"nested\": null,\n\t\t\t\"date_only\": null,\n\t\t\t\"field_type\": null,\n\t\t\t\"id\": \"title\"\n\t\t},\n\t]\n`\n      })]\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n"],"names":[],"sourceRoot":""}