"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4661],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/common-module/view-actions/view-actions.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/common-module/view-actions",component:"UiComponentsCommonModuleViewActions",parameters:{docs:{description:{component:"This component provides actions for managing views in a module, including creating, updating, and deleting views. It supports multi-workspace mode and handles permissions for view actions."}}}},mockAgentGroups=()=>Ember.on("init",(async function(){Ember.getOwner(this).lookup("service:agents-groups")})),mockCurrentUser=()=>Ember.on("init",(async function(){const currentUser=Ember.getOwner(this).lookup("service:current-user");Ember.setProperties(currentUser,{hasAbility:()=>!0,hasAbilities:()=>!0,hasScopedAbilities:()=>!0,userId:1,isAdmin:!0,groups:Ember.A([1,2,3])})})),mockStore=()=>Ember.on("init",(async function(){const store=Ember.getOwner(this).lookup("service:store");store.createRecord("ticket-filter",{id:"1",name:"Sample View",queryHash:[],advancedQueryHash:{all:[{condition:"workspace_id",operator:"is",value:1}]},default:!1,editable:!0}).save({adapterOptions:{modelParams:{}}}),this.selectedView=store.peekRecord("ticket-filter","1")})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"hEGON8gp",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[10,0],[14,1,"ember-testing"],[12],[1,"\\n            "],[8,[39,1],null,null,null],[1,"\\n            "],[10,0],[14,0,"view-wrapper"],[14,1,"header-page-title-container"],[12],[1,"\\n              "],[10,1],[14,0,"view-module"],[12],[1,"Tickets List"],[13],[1,"\\n              "],[10,1],[14,0,"view-selected"],[12],[1,[30,0,["selectedView","name"]]],[13],[1,"\\n              "],[8,[39,2],null,[["@config","@callback","@modelParams","@selectedView","@skipWorkspaceCheck","@saveSkippedViews","@moduleViews","@updateViews","@updateEditableViews","@resetViewQueryParams","@workspaceId","@customWsFilter","@workspaceChoices"],[[30,0,["config"]],[30,0,["callback"]],[30,0,["modelParams"]],[30,0,["selectedView"]],[30,0,["skipWorkspaceCheck"]],[30,0,["saveSkippedViews"]],[30,0,["moduleViews"]],[30,0,["updateViews"]],[30,0,["updateEditableViews"]],[30,0,["resetViewQueryParams"]],[30,0,["workspaceId"]],[30,0,["customWsFilter"]],[30,0,["workspaceChoices"]]]],null],[1,"\\n            "],[13],[1,"\\n          "],[13],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/app-toaster","ui-components/common-module/view-actions"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),mockCurrentUser:mockCurrentUser(),mockStore:mockStore(),mockAgentGroups:mockAgentGroups()}}),name:"Default",argTypes:{config:{type:"object",description:"Configuration object for the view actions component"},callback:{type:"function",description:"Callback function to handle view actions"},modelParams:{type:"object",description:"Parameters for the model associated with the view",control:!1},selectedView:{type:"object",description:"The currently selected view",control:!1},skipWorkspaceCheck:{type:"boolean",description:"Flag to skip workspace check",control:!1},saveSkippedViews:{type:"array",description:"List of views to skip saving",control:!1},moduleViews:{type:"array",description:"List of module views",control:!1},updateViews:{type:"function",description:"Function to update views"},updateEditableViews:{type:"function",description:"Function to update editable views"},resetViewQueryParams:{type:"function",description:"Function to reset view query parameters"},workspaceId:{type:"string",control:!1,description:"ID of the workspace"},customWsFilter:{type:"object",description:"Custom workspace filter",control:!1},workspaceChoices:{type:"array",description:"Choices for workspace selection",control:!1}},args:{config:Ember.Object.create({module:"alert",moduleViewModel:"ticket-filter",viewActions:{permissions:{canCreateAndUpdateView:!0,canManageView:!0}}}),callback:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Callback function was called"),modelParams:Ember.Object.create({order_by:"name",order_type:"asc"}),skipWorkspaceCheck:!1,saveSkippedViews:Ember.A(["archived"]),moduleViews:Ember.A(),updateViews:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Update views function was called"),updateEditableViews:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Update editable views function was called"),resetViewQueryParams:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Reset view query parameters function was called"),workspaceId:"1",customWsFilter:Ember.Object.create({condition:"workspace_id",operator:"is",value:[1]}),workspaceChoices:Ember.A([{id:1,name:"Workspace 1"},{id:2,name:"Workspace 2"}])}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <div id=\"ember-testing\">\n            <UiComponents::AppToaster/>\n            <div class=\"view-wrapper\" id=\"header-page-title-container\">\n              <span class=\"view-module\">Tickets List</span>\n              <span class=\"view-selected\">{{this.selectedView.name}}</span>\n              <UiComponents::CommonModule::ViewActions\n                @config={{this.config}}\n                @callback={{this.callback}}\n                @modelParams={{this.modelParams}}\n                @selectedView={{this.selectedView}}\n                @skipWorkspaceCheck={{this.skipWorkspaceCheck}}\n                @saveSkippedViews={{this.saveSkippedViews}}\n                @moduleViews={{this.moduleViews}}\n                @updateViews={{this.updateViews}}\n                @updateEditableViews={{this.updateEditableViews}}\n                @resetViewQueryParams={{this.resetViewQueryParams}}\n                @workspaceId={{this.workspaceId}}\n                @customWsFilter={{this.customWsFilter}}\n                @workspaceChoices={{this.workspaceChoices}}\n              />\n            </div>\n          </div>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        mockCurrentUser: mockCurrentUser(),\n        mockStore: mockStore(),\n        mockAgentGroups: mockAgentGroups()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    config: {\n      type: 'object',\n      description: 'Configuration object for the view actions component'\n    },\n    callback: {\n      type: 'function',\n      description: 'Callback function to handle view actions'\n    },\n    modelParams: {\n      type: 'object',\n      description: 'Parameters for the model associated with the view',\n      control: false\n    },\n    selectedView: {\n      type: 'object',\n      description: 'The currently selected view',\n      control: false\n    },\n    skipWorkspaceCheck: {\n      type: 'boolean',\n      description: 'Flag to skip workspace check',\n      control: false\n    },\n    saveSkippedViews: {\n      type: 'array',\n      description: 'List of views to skip saving',\n      control: false\n    },\n    moduleViews: {\n      type: 'array',\n      description: 'List of module views',\n      control: false\n    },\n    updateViews: {\n      type: 'function',\n      description: 'Function to update views'\n    },\n    updateEditableViews: {\n      type: 'function',\n      description: 'Function to update editable views'\n    },\n    resetViewQueryParams: {\n      type: 'function',\n      description: 'Function to reset view query parameters'\n    },\n    workspaceId: {\n      type: 'string',\n      control: false,\n      description: 'ID of the workspace'\n    },\n    customWsFilter: {\n      type: 'object',\n      description: 'Custom workspace filter',\n      control: false\n    },\n    workspaceChoices: {\n      type: 'array',\n      description: 'Choices for workspace selection',\n      control: false\n    }\n  },\n  args: {\n    config: EmberObject.create({\n      module: 'alert',\n      moduleViewModel: 'ticket-filter',\n      viewActions: {\n        permissions: {\n          canCreateAndUpdateView: true,\n          canManageView: true\n        }\n      }\n    }),\n    callback: action('Callback function was called'),\n    modelParams: EmberObject.create({\n      order_by: 'name',\n      order_type: 'asc'\n    }),\n    skipWorkspaceCheck: false,\n    saveSkippedViews: A(['archived']),\n    moduleViews: A(),\n    updateViews: action('Update views function was called'),\n    updateEditableViews: action('Update editable views function was called'),\n    resetViewQueryParams: action('Reset view query parameters function was called'),\n    workspaceId: '1',\n    customWsFilter: EmberObject.create({\n      condition: 'workspace_id',\n      operator: 'is',\n      value: [1]\n    }),\n    workspaceChoices: A([{\n      id: 1,\n      name: 'Workspace 1'\n    }, {\n      id: 2,\n      name: 'Workspace 2'\n    }])\n  }\n}",...Default.parameters?.docs?.source}}}}}]);