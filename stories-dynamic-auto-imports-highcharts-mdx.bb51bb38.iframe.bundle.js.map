{"version":3,"file":"stories-dynamic-auto-imports-highcharts-mdx.bb51bb38.iframe.bundle.js","mappings":";;;;;AAiCA","sources":["webpack://freshservice/./app/utils/stories/dynamic-auto-imports/highcharts.mdx"],"sourcesContent":["\nimport React from 'react';\n\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"/runner/_work/itildesk/itildesk/frontend/node_modules/@storybook/addon-docs/dist/shims/mdx-react-shim.mjs\";\nimport {Meta, Source} from '@storybook/blocks';\nimport dedent from 'ts-dedent';\nfunction _createMdxContent(props) {\n  const _components = {\n    code: \"code\",\n    p: \"p\",\n    ..._provideComponents(),\n    ...props.components\n  };\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.p, {\n      children: _jsx(_components.code, {\n        children: \"This is an example of utils documentation\"\n      })\n    }), \"\\n\", \"\\n\", _jsx(Meta, {\n      title: \"Utils/dynamic-auto-imports/highcharts\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Used to remove the legacy highchart reference and load the ember version of highchart and its modules as lazily loaded chunks\"\n    }), \"\\n\", _jsx(Source, {\n      language: \"js\",\n      dark: true,\n      format: false,\n      code: dedent`\n    import autoImportHighchart from 'freshservice/utils/dynamic-auto-imports/highchart';\n    \n    autoImportHighchart([sub_modules]).then(callBackFn);\n    // once the above promise is resolved 'highchart' will be available as a global which can be used by the 'ember-highcharts' plugin\n  `\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"We currently support 'exporting', 'export-data' and 'accessibility' in the sub_modules. Addition of any other submodule will require change in the util\"\n    })]\n  });\n}\nexport default function MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = {\n    ..._provideComponents(),\n    ...props.components\n  };\n  return MDXLayout ? _jsx(MDXLayout, {\n    ...props,\n    children: _jsx(_createMdxContent, {\n      ...props\n    })\n  }) : _createMdxContent(props);\n}\n"],"names":[],"sourceRoot":""}