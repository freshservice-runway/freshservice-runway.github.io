"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[1339],{"./app/components/app-components/status-page/updates/status/status.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const store=Ember.getOwner(this).lookup("service:store"),model=store.createRecord("status-update",{status:store.createRecord("status-page/disruption-status",{id:1,name:"resolved",color:"#4caf50"})});this.set("model",model)})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/status-page/updates/status",component:"AppComponents::StatusPage::Updates::Status",parameters:{docs:{description:{component:"The Status component displays a status or a text label with the provided color. It requires only one hex code, and the component itself adjusts the background, border, and text using different opacity levels."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"SZ8pnRVU",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"\\t\\t\\t"],[8,[39,1],null,[["@model"],[[30,0,["model"]]]],null],[1,"\\n"]],[]],null]],[],false,["if","app-components/status-page/updates/status"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),createStoreMock:createStoreMock()}}),name:"Default",argTypes:{model:{type:{status:{name:"object",required:!0}},description:"The model object containing status updates and update status.",control:{type:"object"}}}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n            {{#if this.translationsLoaded}}\n            <AppComponents::StatusPage::Updates::Status @model={{this.model}} />\n            {{/if}}`,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    model: {\n      type: {\n        status: {\n          name: 'object',\n          required: true\n        }\n      },\n      description: 'The model object containing status updates and update status.',\n      control: {\n        type: 'object'\n      }\n    }\n  }\n}",...Default.parameters?.docs?.source}}}}}]);