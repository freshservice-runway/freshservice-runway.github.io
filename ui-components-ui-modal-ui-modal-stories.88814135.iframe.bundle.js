"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4184],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/ui-modal/ui-modal.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/ui-modal",component:"UiComponentsUiModal"},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"UA8SAMxg",block:'[[[1,"\\n                "],[11,"button"],[24,0,"btn"],[24,"data-test-id","po-ati-btn"],[24,"role","button"],[24,4,"button"],[4,[38,0],["click",[28,[37,1],[[28,[37,2],[[30,0,["toggleModal"]]],null]],null]],null],[12],[1,"\\n                    Open modal\\n                "],[13],[1,"\\n"],[41,[30,0,["toggleModal"]],[[[1,"                    "],[8,[39,4],null,[["@toggleModal","@modalTitle","@submitText","@submitAction","@confirmModal","@defaultModal","@cancelText","@closeOnOutsideClick","@sideModalDirection"],[[30,0,["toggleModal"]],[30,0,["modalTitle"]],[30,0,["submitText"]],[30,0,["btnAction"]],[30,0,["confirmModal"]],[30,0,["defaultModal"]],[30,0,["cancelText"]],[30,0,["closeOnOutsideClick"]],[30,0,["sideModalDirection"]]]],null],[1,"\\n"]],[]],null],[1,"            "]],[],false,["on","fn","mut","if","ui-components/ui-modal"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,btnAction:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Submit button was clicked")(),loadTranslation:loadTranslations()}}),name:"Default",argTypes:{closeOnOutsideClick:{description:"Specifies whether to close the modal if the user clicks outside",type:"boolean"},modalClassBindings:{description:"Additional class bindings for the modal",type:"string"},modalTitle:{description:"The title for the modal",type:"string"},defaultModal:{description:"To show default modal or not",type:"boolean"},confirmModal:{description:"To show confirm modal or not",type:"boolean"},sideModalDirection:{description:"The direction from where the modal is to be opened",options:["","left","right"],control:{type:"select",labels:{left:"left",right:"right"}}},cancelText:{description:"The text to be displayed on bottom left side button in the modal",type:"string"},submitText:{description:"The text to be displayed on bottom right side button in the modal",type:"string"}},args:{closeOnOutsideClick:!1,modalClassBindings:"",modalTitle:"Modal Title",defaultModal:!0,confirmModal:!1,sideModalDirection:"right",cancelText:"Cancel",submitText:"Submit"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                <button type='button'\n                    class = 'btn'\n                    data-test-id = 'po-ati-btn'\n                    role = 'button'\n                    {{on 'click' (fn (mut this.toggleModal))}}>\n                    Open modal\n                </button>\n                {{#if this.toggleModal}}\n                    <UiComponents::UiModal \n                        @toggleModal = {{this.toggleModal}}\n                        @modalTitle = {{this.modalTitle}}\n                        @submitText = {{this.submitText}}\n                        @submitAction = {{this.btnAction}}\n                        @confirmModal = {{this.confirmModal}}\n                        @defaultModal = {{this.defaultModal}}\n                        @cancelText = {{this.cancelText}}\n                        @closeOnOutsideClick = {{this.closeOnOutsideClick}}\n                        @sideModalDirection= {{this.sideModalDirection}}\n                    />\n                {{/if}}\n            `,\n      context: {\n        ...args,\n        btnAction: () => action('Submit button was clicked')(),\n        loadTranslation: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    closeOnOutsideClick: {\n      description: 'Specifies whether to close the modal if the user clicks outside',\n      type: 'boolean'\n    },\n    modalClassBindings: {\n      description: 'Additional class bindings for the modal',\n      type: 'string'\n    },\n    modalTitle: {\n      description: 'The title for the modal',\n      type: 'string'\n    },\n    defaultModal: {\n      description: 'To show default modal or not',\n      type: 'boolean'\n    },\n    confirmModal: {\n      description: 'To show confirm modal or not',\n      type: 'boolean'\n    },\n    sideModalDirection: {\n      description: 'The direction from where the modal is to be opened',\n      options: ['', 'left', 'right'],\n      control: {\n        type: 'select',\n        labels: {\n          left: 'left',\n          right: 'right'\n        }\n      }\n    },\n    cancelText: {\n      description: 'The text to be displayed on bottom left side button in the modal',\n      type: 'string'\n    },\n    submitText: {\n      description: 'The text to be displayed on bottom right side button in the modal',\n      type: 'string'\n    }\n  },\n  args: {\n    closeOnOutsideClick: false,\n    modalClassBindings: '',\n    modalTitle: 'Modal Title',\n    defaultModal: true,\n    confirmModal: false,\n    sideModalDirection: 'right',\n    cancelText: 'Cancel',\n    submitText: 'Submit'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);