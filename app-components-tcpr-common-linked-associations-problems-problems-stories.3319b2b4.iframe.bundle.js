"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6642],{"./app/components/app-components/tcpr-common/linked-associations/problems/problems.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LinkedAssociationsProblems:()=>LinkedAssociationsProblems,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const context=Ember.getOwner(this),store=context.lookup("service:store"),currentUser=context.lookup("service:current-user"),model=store.createRecord("change",{id:4,subject:"Test Subject",priorityName:"Low",priority:1,status:1,statusNameText:"Open",workspaceId:30,humanDisplayId:"CHN-4",associatedProblemCount:1,associatedIncidentCount:2});Ember.setProperties(currentUser,{hasScopedAbilities:()=>!0}),this.set("model",model)})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/tcpr-common/linked-associations/problems",component:"AppComponents::TcprCommon::LinkedAssociations::Problems"},LinkedAssociationsProblems={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"YijPQnWT",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@model","@onClose"],[[30,0,["model"]],[99,2,["@onClose"]]]],null],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","app-components/tcpr-common/linked-associations/problems","onClose"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),createStoreMock:createStoreMock()}}),name:"linked-associations-problems",argTypes:{model:{type:{name:"object",required:!0},description:"Change Model"},onClose:{type:{name:"function"},description:"Will call the function whenever we close the side modal"}},args:{onClose:()=>{}}},__namedExportsOrder=["LinkedAssociationsProblems"];LinkedAssociationsProblems.parameters={...LinkedAssociationsProblems.parameters,docs:{...LinkedAssociationsProblems.parameters?.docs,source:{originalSource:'{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded}}\n          <AppComponents::TcprCommon::LinkedAssociations::Problems\n            @model={{this.model}}\n            @onClose={{onClose}}\n          />\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: "linked-associations-problems",\n  argTypes: {\n    model: {\n      type: {\n        name: "object",\n        required: true\n      },\n      description: "Change Model"\n    },\n    onClose: {\n      type: {\n        name: \'function\'\n      },\n      description: "Will call the function whenever we close the side modal"\n    }\n  },\n  args: {\n    onClose: () => {}\n  }\n}',...LinkedAssociationsProblems.parameters?.docs?.source}}}}}]);