"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[593],{"./app/components/app-components/agent-group-selection/agent-group-selection.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"app-components/agent-group-selection",component:"AgentGroupSelection",parameters:{docs:{description:{component:"Component to assign agents to groups. Filters available groups and agents based on workspace and current selection."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"s5Ji6Otq",block:'[[[1,"\\n                  "],[8,[39,0],null,[["@groupLabel","@agentLabel","@workspaceId","@groupId","@agentId","@onGroupChange","@onAgentChange","@disableAgentGroups","@restrictBusinessAgents"],[[99,1,["@groupLabel"]],[99,2,["@agentLabel"]],[99,3,["@workspaceId"]],[99,4,["@groupId"]],[99,5,["@agentId"]],[99,6,["@onGroupChange"]],[99,7,["@onAgentChange"]],[99,8,["@disableAgentGroups"]],[99,9,["@restrictBusinessAgents"]]]],null],[1,"\\n      "]],[],false,["app-components/agent-group-selection","groupLabel","agentLabel","workspaceId","groupId","agentId","onGroupChange","onAgentChange","disableAgentGroups","restrictBusinessAgents"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{groupLabel:{description:"Label shown for the group dropdown",type:{name:"string"}},agentLabel:{description:"Label shown for the agent dropdown",type:{name:"string"}},groupId:{description:"Currently selected group ID",type:{name:"string"}},agentId:{description:"Currently selected agent ID",type:{name:"string"}},selectedWorkspaceId:{description:"ID of the selected workspace",type:{name:"string"}},disableAgentGroups:{description:"Disable the dropdowns",type:{name:"boolean"}},onGroupChange:{description:"Handler triggered when group changes",type:{name:"function"},table:{disable:!0}},onAgentChange:{description:"Handler triggered when agent changes",type:{name:"function"},table:{disable:!0}}},args:{groupId:"1",agentId:"101",selectedWorkspaceId:"10",groupLabel:"Select Group",agentLabel:"Select Agent",disableAgentGroups:!1,onGroupChange:group=>console.log("Group changed:",group),onAgentChange:agent=>console.log("Agent changed:",agent)}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n                  <AppComponents::AgentGroupSelection\n                    @groupLabel             = {{groupLabel}}\n                    @agentLabel             = {{agentLabel}}\n                    @workspaceId            = {{workspaceId}}\n                    @groupId                = {{groupId}}\n                    @agentId                = {{agentId}}\n                    @onGroupChange          = {{onGroupChange}}\n                    @onAgentChange          = {{onAgentChange}}\n                    @disableAgentGroups     = {{disableAgentGroups}}\n                    @restrictBusinessAgents = {{restrictBusinessAgents}}\n                  />\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    groupLabel: {\n      description: 'Label shown for the group dropdown',\n      type: {\n        name: 'string'\n      }\n    },\n    agentLabel: {\n      description: 'Label shown for the agent dropdown',\n      type: {\n        name: 'string'\n      }\n    },\n    groupId: {\n      description: 'Currently selected group ID',\n      type: {\n        name: 'string'\n      }\n    },\n    agentId: {\n      description: 'Currently selected agent ID',\n      type: {\n        name: 'string'\n      }\n    },\n    selectedWorkspaceId: {\n      description: 'ID of the selected workspace',\n      type: {\n        name: 'string'\n      }\n    },\n    disableAgentGroups: {\n      description: 'Disable the dropdowns',\n      type: {\n        name: 'boolean'\n      }\n    },\n    onGroupChange: {\n      description: 'Handler triggered when group changes',\n      type: {\n        name: 'function'\n      },\n      table: {\n        disable: true\n      }\n    },\n    onAgentChange: {\n      description: 'Handler triggered when agent changes',\n      type: {\n        name: 'function'\n      },\n      table: {\n        disable: true\n      }\n    }\n  },\n  args: {\n    groupId: '1',\n    agentId: '101',\n    selectedWorkspaceId: '10',\n    groupLabel: 'Select Group',\n    agentLabel: 'Select Agent',\n    disableAgentGroups: false,\n    onGroupChange: group => console.log('Group changed:', group),\n    onAgentChange: agent => console.log('Agent changed:', agent)\n  }\n}",...Default.parameters?.docs?.source}}}}}]);