"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[934],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/color-input-field/color-input-field.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/color-input-field",component:"UiComponents::ColorInputField",parameters:{docs:{description:{component:"The ColorInputField component is designed to provide a user interface for selecting and inputting color values. It integrates a text field and a color picker, allowing users to input color values directly or select them using a color picker. The component updates the model with the selected color value and supports customization through various properties."}}}},initOnUpdate=()=>Ember.on("init",(async function(){Ember.setProperties(this,{onUpdate:(model,prop,value)=>{(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("onUpdate")(model,prop,value),Ember.setProperties(model,{[prop]:value})}})})),Default={render:args=>({template:Ember.HTMLBars.template({id:"wd8tb6o/",block:'[[[1,"\\n      "],[10,0],[14,0,"ember-form"],[12],[1,"\\n        "],[10,"form"],[12],[1,"\\n          "],[10,0],[14,0,"form-field"],[12],[1,"\\n            "],[8,[39,0],null,[["@model","@propertyName","@schema","@formScope","@onUpdate"],[[30,0,["model"]],[30,0,["propertyName"]],[30,0,["schema"]],[30,0,["formScope"]],[30,0,["onUpdate"]]]],null],[1,"\\n          "],[13],[1,"\\n        "],[13],[1,"\\n      "],[13],[1,"\\n      "]],[],false,["ui-components/color-input-field"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,initOnUpdate:initOnUpdate()}}),name:"Default",argTypes:{model:{type:"object",description:"The model object that holds the color value.",control:!1},propertyName:{type:"string",description:"The property name on the model where the color value is stored.",control:!1},schema:{type:"object",description:"Schema object containing configuration for the input field, such as label and placeholder."},formScope:{type:"string",description:"Scope of the form to which this input field belongs.",control:!1},onUpdate:{type:"function",description:"Callback function to be called when the color value is updated."}},args:{model:Ember.Object.create({color:"#000000"}),propertyName:"color",schema:{label:"Text Color",placeholder:"Enter color",required:!0,fieldClasses:"color-input"},formScope:"default"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n      <div class=\"ember-form\">\n        <form>\n          <div class=\"form-field\">\n            <UiComponents::ColorInputField\n              @model={{this.model}}\n              @propertyName={{this.propertyName}}\n              @schema={{this.schema}}\n              @formScope={{this.formScope}}\n              @onUpdate={{this.onUpdate}}\n            />\n          </div>\n        </form>\n      </div>\n      `,\n      context: {\n        ...args,\n        initOnUpdate: initOnUpdate()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    model: {\n      type: 'object',\n      description: 'The model object that holds the color value.',\n      control: false\n    },\n    propertyName: {\n      type: 'string',\n      description: 'The property name on the model where the color value is stored.',\n      control: false\n    },\n    schema: {\n      type: 'object',\n      description: 'Schema object containing configuration for the input field, such as label and placeholder.'\n    },\n    formScope: {\n      type: 'string',\n      description: 'Scope of the form to which this input field belongs.',\n      control: false\n    },\n    onUpdate: {\n      type: 'function',\n      description: 'Callback function to be called when the color value is updated.'\n    }\n  },\n  args: {\n    model: EmberObject.create({\n      color: '#000000'\n    }),\n    propertyName: 'color',\n    schema: {\n      label: 'Text Color',\n      placeholder: 'Enter color',\n      required: true,\n      fieldClasses: 'color-input'\n    },\n    formScope: 'default'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);