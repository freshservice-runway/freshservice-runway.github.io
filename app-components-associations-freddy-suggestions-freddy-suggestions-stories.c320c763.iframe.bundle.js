"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4940],{"./app/components/app-components/associations/freddy-suggestions/freddy-suggestions.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FreddySuggestions:()=>FreddySuggestions,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const context=Ember.getOwner(this),store=context.lookup("service:store"),currentAccount=context.lookup("service:current-account"),currentUser=context.lookup("service:current-user"),workspace=context.lookup("service:workspaces"),model=store.createRecord("ticket",{id:22,subject:"Test Subject",human_display_id:"INC-22"});this.set("model",model),Ember.setProperties(currentAccount,{hasFreddyConfig:()=>!0,hasTempFeature:()=>!0,hasFeature:()=>!0}),Ember.setProperties(currentUser,{hasScopedAbilities:()=>!0}),Object.defineProperty(workspace,"getWorkspaceObjectById",{get:()=>()=>({id:30,name:"Sample IT workspace",template_type:"IT"})})})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/associations/freddy-suggestions",component:"AppComponents::Associations::FreddySuggestions"},FreddySuggestions={render:args=>({template:Ember.HTMLBars.template({id:"qAZqDiAt",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"\\t\\t\\t\\t\\t\\t"],[8,[39,1],null,[["@moduleName","@model"],[[30,0,["moduleName"]],[30,0,["model"]]]],null],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","app-components/associations/freddy-suggestions"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,createStoreMock:createStoreMock()}}),name:"freddy-suggestions",argTypes:{model:{type:{name:"object"},control:{disable:!0},description:"Model (TCPR) instance for Freddy Suggestions"},moduleName:{type:{name:"string"},description:"Freddy suggestions are enabled for this module (ticket)."}},args:{moduleName:"ticket"}},__namedExportsOrder=["FreddySuggestions"];FreddySuggestions.parameters={...FreddySuggestions.parameters,docs:{...FreddySuggestions.parameters?.docs,source:{originalSource:'{\n  render: args => {\n    return {\n      template: hbs`\n                {{#if this.translationsLoaded}}\n                        <AppComponents::Associations::FreddySuggestions\n                            @moduleName={{this.moduleName}}\n                            @model={{this.model}}\n                    />\n            {{/if}}\n            `,\n      context: {\n        ...args,\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: "freddy-suggestions",\n  argTypes: {\n    model: {\n      type: {\n        name: "object"\n      },\n      control: {\n        disable: true\n      },\n      description: "Model (TCPR) instance for Freddy Suggestions"\n    },\n    moduleName: {\n      type: {\n        name: "string"\n      },\n      description: "Freddy suggestions are enabled for this module (ticket)."\n    }\n  },\n  args: {\n    moduleName: "ticket"\n  }\n}',...FreddySuggestions.parameters?.docs?.source}}}}}]);