"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6194],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/app-install-page/app-install-page.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{AppInProgressWithCustomInProgressMessage:()=>AppInProgressWithCustomInProgressMessage,AppInProgressWithDefaultInProgressMessage:()=>AppInProgressWithDefaultInProgressMessage,Default:()=>Default,WithDifferentInstallButtonLabel:()=>WithDifferentInstallButtonLabel,WithoutEmberBadgeAndScreenshots:()=>WithoutEmberBadgeAndScreenshots,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/app-install-page",component:"UiComponentsAppInstallPage"},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"0+RyQPr1",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"                "],[10,0],[14,0,"servicebot-app"],[12],[1,"\\n                  "],[8,[39,1],null,[["@app","@onInstallHandler"],[[30,0,["app"]],[30,0,["onInstallHandler"]]]],null],[1,"\\n                "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/app-install-page"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),onInstallHandler:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("install button clicked")()}}),name:"Default",argTypes:{app:{description:"App details. Mandatory properties - icon, title, description, overview(overview tab component path), howToInstall(howToInstall tab component path). Optional Properties - badge, badgeClass, screenshots",type:"object"},onInstallHandler:{description:"Install button callback on click",type:"function"},installLabel:{description:"Install button label. This is optional if not provided default 'Install' text will be used",type:"string"}},args:{app:{icon:"slack",title:"Slack",description:"Slack description",badge:"Beta",badgeClass:"ember-badge-warning",overview:"admin/servicebot/msteams/overview",howToInstall:"admin/servicebot/msteams/how-to-install",screenshots:[{url:"/a/assets/images/msteams-screenshots/get-instant-help.svg",altText:"get instant help"}]}}},WithoutEmberBadgeAndScreenshots={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"0+RyQPr1",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"                "],[10,0],[14,0,"servicebot-app"],[12],[1,"\\n                  "],[8,[39,1],null,[["@app","@onInstallHandler"],[[30,0,["app"]],[30,0,["onInstallHandler"]]]],null],[1,"\\n                "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/app-install-page"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),onInstallHandler:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("install button clicked")()}}),name:"Without ember badge and screenshots",args:{app:{icon:"slack",title:"Slack",description:"Slack description",overview:"admin/servicebot/msteams/overview",howToInstall:"admin/servicebot/msteams/how-to-install"}}},WithDifferentInstallButtonLabel={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"4S1Sxr31",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"              "],[10,0],[14,0,"servicebot-app"],[12],[1,"\\n                "],[8,[39,1],null,[["@app","@onInstallHandler","@installLabel"],[[30,0,["app"]],[30,0,["onInstallHandler"]],[30,0,["installLabel"]]]],null],[1,"\\n              "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/app-install-page"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),onInstallHandler:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("install button clicked")()}}),name:"With different install button label",args:{app:{icon:"slack",title:"Slack",description:"Slack description",overview:"admin/servicebot/msteams/overview",howToInstall:"admin/servicebot/msteams/how-to-install"},installLabel:"fs.common.enable_link_text"}},AppInProgressWithDefaultInProgressMessage={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"4S1Sxr31",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"              "],[10,0],[14,0,"servicebot-app"],[12],[1,"\\n                "],[8,[39,1],null,[["@app","@onInstallHandler","@installLabel"],[[30,0,["app"]],[30,0,["onInstallHandler"]],[30,0,["installLabel"]]]],null],[1,"\\n              "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/app-install-page"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),onInstallHandler:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("install button clicked")()}}),name:"App in-progress with default in-progress message",args:{app:{icon:"slack",title:"Slack",description:"Slack description",overview:"admin/servicebot/msteams/overview",howToInstall:"admin/servicebot/msteams/how-to-install",isInProgress:!0},installLabel:"fs.common.enable_link_text"}},AppInProgressWithCustomInProgressMessage={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"4S1Sxr31",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"              "],[10,0],[14,0,"servicebot-app"],[12],[1,"\\n                "],[8,[39,1],null,[["@app","@onInstallHandler","@installLabel"],[[30,0,["app"]],[30,0,["onInstallHandler"]],[30,0,["installLabel"]]]],null],[1,"\\n              "],[13],[1,"\\n"]],[]],null],[1,"            "]],[],false,["if","ui-components/app-install-page"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),onInstallHandler:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("install button clicked")()}}),name:"App in-progress with custom in-progress message",args:{app:{icon:"slack",title:"Slack",description:"Slack description",overview:"admin/servicebot/msteams/overview",howToInstall:"admin/servicebot/msteams/how-to-install",isInProgress:!0,inProgressMessage:"Please wait, updates in progress"},installLabel:"fs.common.enable_link_text"}},__namedExportsOrder=["Default","WithoutEmberBadgeAndScreenshots","WithDifferentInstallButtonLabel","AppInProgressWithDefaultInProgressMessage","AppInProgressWithCustomInProgressMessage"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n              {{#if this.translationsLoaded}}\n                <div class='servicebot-app'>\n                  <UiComponents::AppInstallPage\n                    @app = {{this.app}}\n                    @onInstallHandler = {{this.onInstallHandler}}\n                  />\n                </div>\n              {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        onInstallHandler: () => action('install button clicked')()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    app: {\n      description: 'App details. Mandatory properties - icon, title, description, overview(overview tab component path), howToInstall(howToInstall tab component path). Optional Properties - badge, badgeClass, screenshots',\n      type: 'object'\n    },\n    onInstallHandler: {\n      description: 'Install button callback on click',\n      type: 'function'\n    },\n    installLabel: {\n      description: \"Install button label. This is optional if not provided default 'Install' text will be used\",\n      type: 'string'\n    }\n  },\n  args: {\n    app: {\n      icon: 'slack',\n      title: 'Slack',\n      description: 'Slack description',\n      badge: 'Beta',\n      badgeClass: 'ember-badge-warning',\n      overview: 'admin/servicebot/msteams/overview',\n      howToInstall: 'admin/servicebot/msteams/how-to-install',\n      screenshots: [{\n        url: '/a/assets/images/msteams-screenshots/get-instant-help.svg',\n        altText: 'get instant help'\n      }]\n    }\n  }\n}",...Default.parameters?.docs?.source}}},WithoutEmberBadgeAndScreenshots.parameters={...WithoutEmberBadgeAndScreenshots.parameters,docs:{...WithoutEmberBadgeAndScreenshots.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n              {{#if this.translationsLoaded}}\n                <div class='servicebot-app'>\n                  <UiComponents::AppInstallPage\n                    @app = {{this.app}}\n                    @onInstallHandler = {{this.onInstallHandler}}\n                  />\n                </div>\n              {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        onInstallHandler: () => action('install button clicked')()\n      }\n    };\n  },\n  name: 'Without ember badge and screenshots',\n  args: {\n    app: {\n      icon: 'slack',\n      title: 'Slack',\n      description: 'Slack description',\n      overview: 'admin/servicebot/msteams/overview',\n      howToInstall: 'admin/servicebot/msteams/how-to-install'\n    }\n  }\n}",...WithoutEmberBadgeAndScreenshots.parameters?.docs?.source}}},WithDifferentInstallButtonLabel.parameters={...WithDifferentInstallButtonLabel.parameters,docs:{...WithDifferentInstallButtonLabel.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n              {{#if this.translationsLoaded}}\n              <div class='servicebot-app'>\n                <UiComponents::AppInstallPage\n                  @app = {{this.app}}\n                  @onInstallHandler = {{this.onInstallHandler}}\n                  @installLabel = {{this.installLabel}}\n                />\n              </div>\n              {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        onInstallHandler: () => action('install button clicked')()\n      }\n    };\n  },\n  name: 'With different install button label',\n  args: {\n    app: {\n      icon: 'slack',\n      title: 'Slack',\n      description: 'Slack description',\n      overview: 'admin/servicebot/msteams/overview',\n      howToInstall: 'admin/servicebot/msteams/how-to-install'\n    },\n    installLabel: 'fs.common.enable_link_text'\n  }\n}",...WithDifferentInstallButtonLabel.parameters?.docs?.source}}},AppInProgressWithDefaultInProgressMessage.parameters={...AppInProgressWithDefaultInProgressMessage.parameters,docs:{...AppInProgressWithDefaultInProgressMessage.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n              {{#if this.translationsLoaded}}\n              <div class='servicebot-app'>\n                <UiComponents::AppInstallPage\n                  @app = {{this.app}}\n                  @onInstallHandler = {{this.onInstallHandler}}\n                  @installLabel = {{this.installLabel}}\n                />\n              </div>\n              {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        onInstallHandler: () => action('install button clicked')()\n      }\n    };\n  },\n  name: 'App in-progress with default in-progress message',\n  args: {\n    app: {\n      icon: 'slack',\n      title: 'Slack',\n      description: 'Slack description',\n      overview: 'admin/servicebot/msteams/overview',\n      howToInstall: 'admin/servicebot/msteams/how-to-install',\n      isInProgress: true\n    },\n    installLabel: 'fs.common.enable_link_text'\n  }\n}",...AppInProgressWithDefaultInProgressMessage.parameters?.docs?.source}}},AppInProgressWithCustomInProgressMessage.parameters={...AppInProgressWithCustomInProgressMessage.parameters,docs:{...AppInProgressWithCustomInProgressMessage.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n              {{#if this.translationsLoaded}}\n              <div class='servicebot-app'>\n                <UiComponents::AppInstallPage\n                  @app = {{this.app}}\n                  @onInstallHandler = {{this.onInstallHandler}}\n                  @installLabel = {{this.installLabel}}\n                />\n              </div>\n              {{/if}}\n            `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        onInstallHandler: () => action('install button clicked')()\n      }\n    };\n  },\n  name: 'App in-progress with custom in-progress message',\n  args: {\n    app: {\n      icon: 'slack',\n      title: 'Slack',\n      description: 'Slack description',\n      overview: 'admin/servicebot/msteams/overview',\n      howToInstall: 'admin/servicebot/msteams/how-to-install',\n      isInProgress: true,\n      inProgressMessage: 'Please wait, updates in progress'\n    },\n    installLabel: 'fs.common.enable_link_text'\n  }\n}",...AppInProgressWithCustomInProgressMessage.parameters?.docs?.source}}}}}]);