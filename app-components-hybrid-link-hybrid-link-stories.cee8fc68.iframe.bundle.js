"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[753],{"./app/components/app-components/hybrid-link/hybrid-link.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__={title:"app-components/hybrid-link",component:"AppComponents::HybridLink",parameters:{docs:{description:{component:"The HybridLink component is used to render a link that conditionally uses either a standard anchor tag or an Ember LinkTo component based on the isReactPage argument. It allows for dynamic routing based on the provided arguments."}}}},mockCurrentAccount=()=>Ember.on("init",(async function(){const currentAccount=Ember.getOwner(this).lookup("service:current-account");Ember.setProperties(currentAccount,{hasTempFeature:()=>!0})})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"0o8eBL4H",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@isReactPage","@route","@class"],[[30,0,["isReactPage"]],[30,0,["route"]],[30,0,["class"]]]],[["default"],[[[[1,"\\n            Sample Text for Link\\n          "]],[]]]]],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","app-components/hybrid-link"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),mockCurrentAccount:mockCurrentAccount()}}),name:"Default",argTypes:{isReactPage:{type:"boolean",description:"Determines if the link should be a React page link or an Ember route link."},route:{type:"string",description:"The URL or route name to navigate to when the link is clicked."},class:{type:"string",description:"CSS class to apply to the link element."}},args:{isReactPage:!0,route:"https://www.freshworks.com/freshservice/",class:"link-class"}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <AppComponents::HybridLink\n            @isReactPage={{this.isReactPage}}\n            @route={{this.route}}\n            @class={{this.class}}\n          >\n            Sample Text for Link\n          </AppComponents::HybridLink>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        mockCurrentAccount: mockCurrentAccount()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    isReactPage: {\n      type: 'boolean',\n      description: 'Determines if the link should be a React page link or an Ember route link.'\n    },\n    route: {\n      type: 'string',\n      description: 'The URL or route name to navigate to when the link is clicked.'\n    },\n    class: {\n      type: 'string',\n      description: 'CSS class to apply to the link element.'\n    }\n  },\n  args: {\n    isReactPage: true,\n    route: 'https://www.freshworks.com/freshservice/',\n    class: 'link-class'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);