"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[8249],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/app-components/feedback-widget/feedback-widget.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"app-components/feedback-widget",component:"AppComponentsFeedbackWidget",parameters:{docs:{description:{component:"The FeedbackWidget component is designed to capture user feedback. It provides a customizable interface with options for setting the position, header title, description, and feedback submission actions. The component also handles the display of success messages upon feedback submission."}}}},Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"mFo1OAqn",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,[["@right","@top","@headerTitle","@headerDescription","@feedbackSentSuccessMsg","@submitBtnText","@feedbackSubmitted","@msgMinLength","@submitFeedbackAction","@feedbackWidgetCloseAction","@textareaPlaceholder"],[[30,0,["right"]],[30,0,["top"]],[30,0,["headerTitle"]],[30,0,["headerDescription"]],[30,0,["feedbackSentSuccessMsg"]],[30,0,["submitBtnText"]],[30,0,["feedbackSubmitted"]],[30,0,["msgMinLength"]],[30,0,["submitFeedbackAction"]],[30,0,["feedbackWidgetCloseAction"]],[30,0,["textareaPlaceholder"]]]],null],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","app-components/feedback-widget"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations()}}),name:"Default",argTypes:{right:{type:"number",description:"The right position of the feedback widget in pixels."},top:{type:"number",description:"The top position of the feedback widget in pixels."},headerTitle:{type:"string",description:"The title displayed in the feedback widget header."},headerDescription:{type:"string",description:"The description displayed in the feedback widget header."},feedbackSentSuccessMsg:{type:"string",description:"The success message displayed after feedback is submitted."},submitBtnText:{type:"string",description:"The text displayed on the submit button."},feedbackSubmitted:{type:"boolean",description:"Indicates whether the feedback has been submitted."},msgMinLength:{type:"number",description:"The minimum length required for the feedback message."},submitFeedbackAction:{type:"function",description:"The action triggered when the feedback is submitted."},feedbackWidgetCloseAction:{type:"function",description:"The action triggered when the feedback widget is closed."},textareaPlaceholder:{type:"string",description:"The placeholder text for the feedback message textarea."}},args:{right:0,top:0,headerTitle:"Feedback",headerDescription:"We value your feedback",feedbackSentSuccessMsg:"Thank you for your feedback!",submitBtnText:"Submit",feedbackSubmitted:!1,msgMinLength:1,submitFeedbackAction:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Feedback submitted")(),feedbackWidgetCloseAction:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Feedback widget closed")(),textareaPlaceholder:"Enter your feedback here..."}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <AppComponents::FeedbackWidget\n            @right={{this.right}}\n            @top={{this.top}}\n            @headerTitle={{this.headerTitle}}\n            @headerDescription={{this.headerDescription}}\n            @feedbackSentSuccessMsg={{this.feedbackSentSuccessMsg}}\n            @submitBtnText={{this.submitBtnText}}\n            @feedbackSubmitted={{this.feedbackSubmitted}}\n            @msgMinLength={{this.msgMinLength}}\n            @submitFeedbackAction={{this.submitFeedbackAction}}\n            @feedbackWidgetCloseAction={{this.feedbackWidgetCloseAction}}\n            @textareaPlaceholder={{this.textareaPlaceholder}}\n          />\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    right: {\n      type: 'number',\n      description: 'The right position of the feedback widget in pixels.'\n    },\n    top: {\n      type: 'number',\n      description: 'The top position of the feedback widget in pixels.'\n    },\n    headerTitle: {\n      type: 'string',\n      description: 'The title displayed in the feedback widget header.'\n    },\n    headerDescription: {\n      type: 'string',\n      description: 'The description displayed in the feedback widget header.'\n    },\n    feedbackSentSuccessMsg: {\n      type: 'string',\n      description: 'The success message displayed after feedback is submitted.'\n    },\n    submitBtnText: {\n      type: 'string',\n      description: 'The text displayed on the submit button.'\n    },\n    feedbackSubmitted: {\n      type: 'boolean',\n      description: 'Indicates whether the feedback has been submitted.'\n    },\n    msgMinLength: {\n      type: 'number',\n      description: 'The minimum length required for the feedback message.'\n    },\n    submitFeedbackAction: {\n      type: 'function',\n      description: 'The action triggered when the feedback is submitted.'\n    },\n    feedbackWidgetCloseAction: {\n      type: 'function',\n      description: 'The action triggered when the feedback widget is closed.'\n    },\n    textareaPlaceholder: {\n      type: 'string',\n      description: 'The placeholder text for the feedback message textarea.'\n    }\n  },\n  args: {\n    right: 0,\n    top: 0,\n    headerTitle: 'Feedback',\n    headerDescription: 'We value your feedback',\n    feedbackSentSuccessMsg: 'Thank you for your feedback!',\n    submitBtnText: 'Submit',\n    feedbackSubmitted: false,\n    msgMinLength: 1,\n    submitFeedbackAction: () => action('Feedback submitted')(),\n    feedbackWidgetCloseAction: () => action('Feedback widget closed')(),\n    textareaPlaceholder: 'Enter your feedback here...'\n  }\n}",...Default.parameters?.docs?.source}}}}}]);