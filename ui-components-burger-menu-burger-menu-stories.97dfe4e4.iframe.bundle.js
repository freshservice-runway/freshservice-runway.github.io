"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[6506],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/ui-components/burger-menu/burger-menu.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"ui-components/burger-menu",component:"UiComponentsBurgerMenu"},Default={render:args=>({template:Ember.HTMLBars.template({id:"RzGxqNQ0",block:'[[[1,"\\n                "],[10,0],[14,1,"header-page-title-container"],[12],[1,"\\n                    "],[8,[39,0],null,[["@triggerText","@triggerTextId","@customClass","@closeCallback","@hideBurgerIcon","@noMenu"],[[30,0,["triggerText"]],[30,0,["triggerTextId"]],[30,0,["customClass"]],[30,0,["closeCallback"]],[30,0,["hideBurgerIcon"]],[30,0,["noMenu"]]]],[["default"],[[[[1,"\\n"],[42,[28,[37,2],[[28,[37,2],[[30,0,["items"]]],null]],null],null,[[[1,"                            "],[11,0],[24,"role","menuitem"],[16,0,[29,["menuitem ",[52,[30,1,["selected"]],"active"]]]],[4,[38,4],["click",[28,[37,5],[[30,0,["onClick"]],[30,1],[30,0]],null]],null],[12],[1,"\\n                                "],[1,[30,1,["label"]]],[1,"\\n                            "],[13],[1,"\\n"]],[1]],null],[1,"                    "]],[]]]]],[1,"\\n                "],[13],[1,"\\n            "]],["item"],false,["ui-components/burger-menu","each","-track-array","if","on","fn"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,items:[{selected:!0,label:"Menu A"},{selected:!1,label:"Menu B"},{selected:!1,label:"Menu C"}],closeCallback:()=>(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("menu close callback trigerred")(),onClick:function(item,context){context.items.forEach((menu=>{Ember.set(menu,"selected",!1)})),Ember.set(item,"selected",!0),(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)(`${item.label} was clicked`)()}}}),name:"Default",argTypes:{triggerTextId:{description:"Trigger elements ID",type:{name:"string",required:!1},control:!1},triggerText:{description:"Text displayed near the burger menu icon",type:{name:"string",required:!0}},hideBurgerIcon:{description:"Decides whether the burger icon should be shown",type:{name:"boolean",required:!1}},renderInBody:{description:"Decides whether the element should be rendered inside body or head ( basically adds 'page-heading' class to the menu if false)",type:{name:"boolean",required:!1},control:!1},customClass:{description:"Adds a custom class",type:{name:"string",required:!1},control:!1}},args:{triggerText:"Custom menu",hideBurgerIcon:!1,customClass:"custom-class",renderInBody:!0,triggerTextId:""}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: args => {\n    return {\n      template: hbs`\n                <div id='header-page-title-container'>\n                    <UiComponents::BurgerMenu\n                        @triggerText = {{this.triggerText}}\n                        @triggerTextId = {{this.triggerTextId}}\n                        @customClass = {{this.customClass}}\n                        @closeCallback = {{this.closeCallback}}\n                        @hideBurgerIcon = {{this.hideBurgerIcon}}\n                        @noMenu = {{this.noMenu}}>\n                        {{#each this.items as |item| }}\n                            <div role='menuitem' class='menuitem {{if item.selected 'active'}}' {{on 'click' (fn this.onClick item this)}} >\n                                {{item.label}}\n                            </div>\n                        {{/each}}\n                    </UiComponents::BurgerMenu>\n                </div>\n            `,\n      context: {\n        ...args,\n        items: [{\n          selected: true,\n          label: 'Menu A'\n        }, {\n          selected: false,\n          label: 'Menu B'\n        }, {\n          selected: false,\n          label: 'Menu C'\n        }],\n        closeCallback: () => action('menu close callback trigerred')(),\n        onClick: function (item, context) {\n          context.items.forEach(menu => {\n            set(menu, 'selected', false);\n          });\n          set(item, 'selected', true);\n          action(`${item.label} was clicked`)();\n        }\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    triggerTextId: {\n      description: 'Trigger elements ID',\n      type: {\n        name: 'string',\n        required: false\n      },\n      control: false\n    },\n    triggerText: {\n      description: 'Text displayed near the burger menu icon',\n      type: {\n        name: 'string',\n        required: true\n      }\n    },\n    hideBurgerIcon: {\n      description: 'Decides whether the burger icon should be shown',\n      type: {\n        name: 'boolean',\n        required: false\n      }\n    },\n    renderInBody: {\n      description: \"Decides whether the element should be rendered inside body or head ( basically adds 'page-heading' class to the menu if false)\",\n      type: {\n        name: 'boolean',\n        required: false\n      },\n      control: false\n    },\n    customClass: {\n      description: 'Adds a custom class',\n      type: {\n        name: 'string',\n        required: false\n      },\n      control: false\n    }\n  },\n  args: {\n    triggerText: 'Custom menu',\n    hideBurgerIcon: false,\n    customClass: 'custom-class',\n    renderInBody: true,\n    triggerTextId: ''\n  }\n}",...Default.parameters?.docs?.source}}}}}]);