"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[2831],{"./node_modules/@storybook/addon-actions/dist/index.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{XI:()=>action});var external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/internal/preview-api"),external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_=__webpack_require__("storybook/internal/preview-errors"),external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),v4=__webpack_require__("./node_modules/@storybook/addon-actions/node_modules/uuid/dist/esm-browser/v4.js"),ADDON_ID="storybook/actions",EVENT_ID=`${ADDON_ID}/action-event`,config={depth:10,clearOnStoryChange:!0,limit:50},findProto=(obj,callback)=>{let proto=Object.getPrototypeOf(obj);return!proto||callback(proto)?proto:findProto(proto,callback)},serializeArg=a=>{if("object"==typeof(e=a)&&e&&findProto(e,(proto=>/^Synthetic(?:Base)?Event$/.test(proto.constructor.name)))&&"function"==typeof e.persist){let e=Object.create(a.constructor.prototype,Object.getOwnPropertyDescriptors(a));e.persist();let viewDescriptor=Object.getOwnPropertyDescriptor(e,"view"),view=viewDescriptor?.value;return"object"==typeof view&&"Window"===view?.constructor.name&&Object.defineProperty(e,"view",{...viewDescriptor,value:Object.create(view.constructor.prototype)}),e}var e;return a},generateId=()=>"object"==typeof crypto&&"function"==typeof crypto.getRandomValues?(0,v4.A)():Date.now().toString(36)+Math.random().toString(36).substring(2);function action(name,options={}){let actionOptions={...config,...options},handler=function(...args){if(options.implicit){let storyRenderer=("__STORYBOOK_PREVIEW__"in external_STORYBOOK_MODULE_GLOBAL_.global?external_STORYBOOK_MODULE_GLOBAL_.global.__STORYBOOK_PREVIEW__:void 0)?.storyRenders.find((render=>"playing"===render.phase||"rendering"===render.phase));if(storyRenderer){let deprecated=!window?.FEATURES?.disallowImplicitActionsInRenderV8,error=new external_STORYBOOK_MODULE_CORE_EVENTS_PREVIEW_ERRORS_.ImplicitActionsDuringRendering({phase:storyRenderer.phase,name,deprecated});if(!deprecated)throw error;console.warn(error)}}let channel=external_STORYBOOK_MODULE_PREVIEW_API_.addons.getChannel(),id=generateId(),serializedArgs=args.map(serializeArg),normalizedArgs=args.length>1?serializedArgs:serializedArgs[0],actionDisplayToEmit={id,count:0,data:{name,args:normalizedArgs},options:{...actionOptions,maxDepth:5+(actionOptions.depth||3),allowFunction:actionOptions.allowFunction||!1}};channel.emit(EVENT_ID,actionDisplayToEmit)};return handler.isAction=!0,handler.implicit=options.implicit,handler}},"./app/components/app-components/tcpr-common/quick-update/quick-update.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");const __WEBPACK_DEFAULT_EXPORT__={title:"app-components/tcpr-common/quick-update",component:"AppComponentsTcprCommonQuickUpdate",parameters:{docs:{description:{component:"The Quick Update component provides a dropdown interface for updating planning fields associated with a module. It dynamically adjusts visibility and interactivity based on the current state of the fields and the module type."}}}},mockStore=()=>Ember.on("init",(async function(){Ember.getOwner(this).lookup("service:store").createRecord("change-planning-field",{id:1})})),mockModuleFieldService=()=>Ember.on("init",(async function(){Ember.getOwner(this).lookup("service:module-fields").fetchModuleFields.perform("release")})),Default={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"1j1uOYjx",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[8,[39,1],null,null,null],[1,"\\n          "],[10,0],[14,0,"tcpr-show-page"],[12],[1,"\\n            "],[10,0],[14,0,"tcpr-summary-and-actions"],[12],[1,"\\n              "],[10,0],[14,0,"quick-actions-bar"],[12],[1,"\\n                "],[10,0],[14,0,"right-bar"],[14,5,"width: 100%"],[12],[1,"\\n                  "],[8,[39,2],null,[["@isPlanningFieldsLoading","@isSolutionLoading","@model","@module","@switchTab"],[[30,0,["isPlanningFieldsLoading"]],[30,0,["isSolutionLoading"]],[30,0,["model"]],[30,0,["module"]],[30,0,["switchTab"]]]],null],[1,"\\n                "],[13],[1,"\\n              "],[13],[1,"\\n            "],[13],[1,"\\n          "],[13],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","ui-components/app-toaster","app-components/tcpr-common/quick-update"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),mockStore:mockStore(),mockModuleFieldService:mockModuleFieldService()}}),name:"Default",argTypes:{isPlanningFieldsLoading:{type:"boolean",description:"Indicates if the planning fields are currently loading."},isSolutionLoading:{type:"boolean",description:"Indicates if the solution is currently loading."},model:{type:"object",description:"The model object associated with the quick update."},module:{type:"string",description:"The module name for which the quick update is being performed.",control:{disable:!0}},switchTab:{type:"function",description:"Callback function to switch tabs."}},args:{isPlanningFieldsLoading:!1,isSolutionLoading:!1,model:Ember.Object.create({id:1,closeBtnDisabled:!1}),module:"release",switchTab:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.XI)("Switch tab was called with args")}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded }}\n          <UiComponents::AppToaster/>\n          <div class=\"tcpr-show-page\">\n            <div class=\"tcpr-summary-and-actions\">\n              <div class=\"quick-actions-bar\">\n                <div class=\"right-bar\" style=\"width: 100%\">\n                  <AppComponents::TcprCommon::QuickUpdate\n                    @isPlanningFieldsLoading={{this.isPlanningFieldsLoading}}\n                    @isSolutionLoading={{this.isSolutionLoading}}\n                    @model={{this.model}}\n                    @module={{this.module}}\n                    @switchTab={{this.switchTab}}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        mockStore: mockStore(),\n        mockModuleFieldService: mockModuleFieldService()\n      }\n    };\n  },\n  name: 'Default',\n  argTypes: {\n    isPlanningFieldsLoading: {\n      type: 'boolean',\n      description: 'Indicates if the planning fields are currently loading.'\n    },\n    isSolutionLoading: {\n      type: 'boolean',\n      description: 'Indicates if the solution is currently loading.'\n    },\n    model: {\n      type: 'object',\n      description: 'The model object associated with the quick update.'\n    },\n    module: {\n      type: 'string',\n      description: 'The module name for which the quick update is being performed.',\n      control: {\n        disable: true\n      }\n    },\n    switchTab: {\n      type: 'function',\n      description: 'Callback function to switch tabs.'\n    }\n  },\n  args: {\n    isPlanningFieldsLoading: false,\n    isSolutionLoading: false,\n    model: EmberObject.create({\n      id: 1,\n      closeBtnDisabled: false\n    }),\n    module: 'release',\n    switchTab: action('Switch tab was called with args')\n  }\n}",...Default.parameters?.docs?.source}}}}}]);