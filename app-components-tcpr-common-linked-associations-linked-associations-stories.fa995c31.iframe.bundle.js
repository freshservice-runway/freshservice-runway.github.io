"use strict";(globalThis.webpackChunkfreshservice=globalThis.webpackChunkfreshservice||[]).push([[4047],{"./app/components/app-components/tcpr-common/linked-associations/linked-associations.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LinkedAssociations:()=>LinkedAssociations,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});const createStoreMock=()=>Ember.on("init",(async function(){const context=Ember.getOwner(this),store=context.lookup("service:store"),currentUser=context.lookup("service:current-user"),model=store.createRecord("change",{id:4,subject:"Test Subject",priorityName:"Low",priority:1,status:1,statusNameText:"Open",workspaceId:30,humanDisplayId:"CHN-4",associatedProblemCount:1,associatedIncidentCount:2});Ember.setProperties(currentUser,{hasScopedAbilities:()=>!0}),this.set("model",model)})),__WEBPACK_DEFAULT_EXPORT__={title:"app-components/tcpr-common/linked-associations",component:"AppComponents::TcprCommon::LinkedAssociations"},LinkedAssociations={render:(args,{globals:{loadTranslations}})=>({template:Ember.HTMLBars.template({id:"wFbX3yJB",block:'[[[1,"\\n"],[41,[30,0,["translationsLoaded"]],[[[1,"          "],[10,0],[14,1,"ember-testing"],[12],[1,"\\n            "],[8,[39,1],null,[["@showModal","@model","@toggleModal","@modules"],[[99,2,["@showModal"]],[30,0,["model"]],[99,3,["@toggleModal"]],[99,4,["@modules"]]]],null],[1,"\\n          "],[13],[1,"\\n"]],[]],null],[1,"      "]],[],false,["if","app-components/tcpr-common/linked-associations","showModal","toggleModal","modules"]]',moduleName:"(unknown template module)",isStrictMode:!1}),context:{...args,loadTranslations:loadTranslations(),createStoreMock:createStoreMock()}}),name:"linked-associations",argTypes:{showModal:{type:{name:"boolean",required:!0},description:"Show or hides the linked association side modal"},model:{type:{name:"object",required:!0},description:"Change Model"},toggleModal:{type:{name:"function"},description:"Will call the function whenever we close the side modal"},modules:{type:{name:"array"},description:"Need to pass the modules which needs to be shown in linked associations side modal"}},args:{modules:["ticket","problem"],showModal:!0,toggleModal:()=>{}}},__namedExportsOrder=["LinkedAssociations"];LinkedAssociations.parameters={...LinkedAssociations.parameters,docs:{...LinkedAssociations.parameters?.docs,source:{originalSource:"{\n  render: (args, {\n    globals: {\n      loadTranslations\n    }\n  }) => {\n    return {\n      template: hbs`\n        {{#if this.translationsLoaded}}\n          <div id='ember-testing'>\n            <AppComponents::TcprCommon::LinkedAssociations\n              @showModal={{showModal}}\n              @model={{this.model}}\n              @toggleModal={{toggleModal}}\n              @modules={{modules}}\n            />\n          </div>\n        {{/if}}\n      `,\n      context: {\n        ...args,\n        loadTranslations: loadTranslations(),\n        createStoreMock: createStoreMock()\n      }\n    };\n  },\n  name: \"linked-associations\",\n  argTypes: {\n    showModal: {\n      type: {\n        name: 'boolean',\n        required: true\n      },\n      description: \"Show or hides the linked association side modal\"\n    },\n    model: {\n      type: {\n        name: \"object\",\n        required: true\n      },\n      description: \"Change Model\"\n    },\n    toggleModal: {\n      type: {\n        name: 'function'\n      },\n      description: \"Will call the function whenever we close the side modal\"\n    },\n    modules: {\n      type: {\n        name: 'array'\n      },\n      description: \"Need to pass the modules which needs to be shown in linked associations side modal\"\n    }\n  },\n  args: {\n    modules: ['ticket', 'problem'],\n    showModal: true,\n    toggleModal: () => {}\n  }\n}",...LinkedAssociations.parameters?.docs?.source}}}}}]);